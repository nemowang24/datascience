1
00:00:06,700 --> 00:00:14,440
好的，让我们开始吧。首先，大家请打开画布。

2
00:00:14,440 --> 00:00:22,180
好的，让我们开始吧。首先，大家请打开画布并转到主页。

3
00:00:22,180 --> 00:00:25,590
请前往首页，确保阅读教学大纲，因为要求都在那里列出。

4
00:00:25,590 --> 00:00:29,000
确保阅读教学大纲，了解课程要求。

5
00:00:29,000 --> 00:00:34,840
对于计算基础课程，我们需要每个人完成家庭作业。

6
00:00:34,840 --> 00:00:40,680
对于计算基础课程，所有参与者都必须完成作业和测验。

7
00:00:40,680 --> 00:00:46,280
将会有测验和项目。如果有指定的截止日期，您必须在截止日期之前提交。

8
00:00:46,280 --> 00:00:51,880
如果有指定截止日期的项目，您必须在截止日期之前提交。

9
00:00:51,880 --> 00:00:55,230
只有在必要的情况下才指定日期。如果您有特殊情况，请提供详细信息。

10
00:00:55,230 --> 00:00:58,580
在无法控制的情况下，如果您有特殊情况，请发送一份说明您情况的便条。

11
00:00:58,580 --> 00:01:03,360
如果你感觉不舒服，请务必告诉你的医生或家人。

12
00:01:03,360 --> 00:01:08,140
如果你生病了，寻求医生或亲戚的建议，他们可以提供支持。

13
00:01:08,140 --> 00:01:11,850
有人可以验证您的情况，这是一个特殊情况。否则，您应该准时。

14
00:01:11,850 --> 00:01:15,560
情况特殊；否则，你应该准时。这是一件事，另一件是...

15
00:01:15,560 --> 00:01:21,850
当然，大部分情况下我们会使用编程来处理另一件事。

16
00:01:21,850 --> 00:01:28,140
当然，我们将主要使用Python编程来完成这项任务。

17
00:01:28,580 --> 00:01:32,670
您可以使用Python和诸如GPT等聊天机器人或其他人工智能语言模型来辅助学习。

18
00:01:32,670 --> 00:01:36,760
使用GPT或其他语言模型AI来增强学习体验，但避免简单地复制粘贴。

19
00:01:36,760 --> 00:01:40,070
只需按原样提交作业。检查一下是否所有内容都齐全。

20
00:01:40,070 --> 00:01:43,380
按原样提交作业，并在遇到无法解决的问题时告诉我们。

21
00:01:43,380 --> 00:01:46,640
如果你遇到一个无法解决的问题，向聊天机器人 GPT 寻求帮助是可以的，然后查看结果。

22
00:01:46,640 --> 00:01:49,900
如果您向聊天机器人 GPT 请求帮助，那很好。在收到结果后，您可以继续。

23
00:01:49,900 --> 00:01:53,350
在收到一些答案后，请将它们写下来，因为它们可能不是您最初的想法。

24
00:01:53,350 --> 00:01:56,800
写下一些答案，因为它们并非原创于你，而是受到你周围环境的影响。

25
00:01:58,580 --> 00:02:03,200
如果您提到使用GPT或其他任何聊天机器人，请提供参考。

26
00:02:03,200 --> 00:02:07,820
当您提到与GPT或其他任何服务聊天时，请提供参考。

27
00:02:08,620 --> 00:02:15,360
请展示另一个允许分享的模型。

28
00:02:18,120 --> 00:02:22,960
任何其他模型都允许您分享，所以告诉我，让我们看看，合并排序这个。

29
00:02:29,340 --> 00:02:36,480
让我们使用归并排序来整理这些数据。好的，让我们看看这个。一旦你得到了结果...

30
00:02:38,480 --> 00:02:44,920
好的，让我们看看这个。一旦你有了结果，就会有一个分享按钮。点击分享按钮。

31
00:03:08,200 --> 00:03:11,210
然后，总是有一个分享按钮可用。请点击分享按钮。让我给你一个做这件事的例子。每个模型都包含这个功能。

32
00:03:11,210 --> 00:03:14,220
好的，我会给你一个做这件事的例子。每个模型都有它自己的。

33
00:03:14,220 --> 00:03:17,900
它位于不同的位置，所以一旦您分享它，每个人都可以看到。

34
00:03:17,900 --> 00:03:21,580
一旦您分享它，无论在哪里，每个人都可以看到。目的是要有

35
00:03:21,580 --> 00:03:24,780
目的是要进行完整的对话，不仅仅是直接询问结果，而是参与对话。

36
00:03:24,780 --> 00:03:27,980
在整个对话过程中，你不仅仅是直接询问结果，还在寻找答案。

37
00:03:28,580 --> 00:03:31,830
所以，你不应该只是复制问题然后让 GPT 为你解决。

38
00:03:31,830 --> 00:03:35,080
你不应该简单地复制问题并要求像GPT这样的聊天机器人为你解决问题，以获取答案。

39
00:03:35,080 --> 00:03:38,700
如果您对收到的答案有任何疑问，请在继续之前要求解释。

40
00:03:38,700 --> 00:03:42,320
请解释一下这部分，然后你可以从那里继续工作。那就好。让我们继续整个对话。

41
00:03:42,320 --> 00:03:44,990
然后我们将展示整个对话以展示这一行动的目的。

42
00:03:44,990 --> 00:03:47,660
我们将展示这个目的。我将提供一个具体的例子来阐明。

43
00:03:47,660 --> 00:03:52,040
例如，他们将云图标更改为按钮。

44
00:03:52,040 --> 00:03:56,420
他们更改了云存储按钮，我稍后会处理。

45
00:03:58,580 --> 00:04:01,590
这门课的办公时间将安排在周四。我们还有周二和

46
00:04:01,590 --> 00:04:04,600
这门课程的办公时间是星期四。

47
00:04:05,540 --> 00:04:07,910
每周四，下午下课后就是工作时间。

48
00:04:07,910 --> 00:04:10,280
星期四下午，课后就是工作时间。你可以来我的办公室。

49
00:04:10,280 --> 00:04:14,320
如果您有任何问题，请到我的办公室。如果需要，在课堂上也可以提问。

50
00:04:14,320 --> 00:04:18,360
如果你在课堂上有任何问题，请随时提问。

51
00:04:18,360 --> 00:04:21,350
在课堂上，我们会处理。如果是非常个人的事情，我们希望您来办公室。

52
00:04:21,350 --> 00:04:24,340
我会处理。通常，对于非常个人的事情，我们希望您前往办公室。

53
00:04:24,340 --> 00:04:27,470
如果每个人有类似的问题，我们会在课堂上解决。在课堂之前，

54
00:04:27,470 --> 00:04:30,600
如果有人有类似的问题，我们会在课堂上讨论。通常，在课前我们会先讨论。

55
00:04:30,600 --> 00:04:33,060
通常，当我在准备时，你来问我问题，这并不理想。

56
00:04:33,060 --> 00:04:35,520
当我在准备时，你问我问题并不是一个好时机。

57
00:04:35,520 --> 00:04:38,500
我现在过得不愉快，因为我的心思不在这里。在之前我需要把一切都安排好。

58
00:04:38,500 --> 00:04:41,480
因为我的心不在焉，我需要整理一切。所以课后，好吗？

59
00:04:41,620 --> 00:04:46,740
这是一个班级，对吧？因此，这门课程将分为三个部分。假设每个人已经具备了一些

60
00:04:46,740 --> 00:04:51,860
本课程将分为三个部分，假设每个人已经具备了一些基本技能。

61
00:04:51,860 --> 00:04:53,340
编程的基础技能。

62
00:04:54,340 --> 00:04:57,390
我们将从编程开始，然后审查Python程序。然而，我们不仅仅会

63
00:04:57,390 --> 00:05:00,440
接下来，我们将审查Python程序。然而，我们不会继续进行非常

64
00:05:00,440 --> 00:05:03,550
专注于基本方面。这部分是你自己的工作。你需要处理好它。

65
00:05:03,550 --> 00:05:06,660
这是一个基础部分。这部分是你自己的工作。如果你没有做任何Python

66
00:05:06,660 --> 00:05:09,420
如果你以前没有使用过Python，你需要赶上。我可以为你提供一些资源。

67
00:05:09,420 --> 00:05:12,180
在那之前，你需要赶上。我会提供一些资源给你。然后在那之后，

68
00:05:12,420 --> 00:05:16,130
之后，我们将在头两周讲解面向对象编程。

69
00:05:16,130 --> 00:05:19,840
在头两周，我们将学习使用Python进行面向对象编程。

70
00:05:20,000 --> 00:05:24,140
我们将使用Python，涵盖Python编程。

71
00:05:24,140 --> 00:05:27,080
这意味着我们将涵盖Python类、Python对象、用户定义的类和对象。

72
00:05:27,080 --> 00:05:30,020
Python类，Python对象，用户定义的类和对象，以及类似的概念

73
00:05:30,020 --> 00:05:34,480
这些物品很重要，因为它们是我们以后将要使用的主要应用。

74
00:05:34,480 --> 00:05:38,940
这是我们将来在机器学习中要使用的主要应用程序。

75
00:05:38,940 --> 00:05:42,670
机器学习和其他软件包是一个重要组成部分。此外，我们计划进一步扩展。

76
00:05:42,670 --> 00:05:46,400
和其他软件包。这是主要部分。我们还将进一步扩展。

77
00:05:46,400 --> 00:05:49,720
这是用来学习数据结构和算法的。您会看到我们会广泛使用它们。

78
00:05:49,720 --> 00:05:53,040
我们将广泛使用Python类来实现数据结构和算法。

79
00:05:54,140 --> 00:05:59,760
Python类，对象和算法。我们将花两周时间学习这个。

80
00:05:59,760 --> 00:06:05,380
关于对象和相关内容，我们将在面向对象编程（OOP）课程中的接下来的两周专注于算法。

81
00:06:05,380 --> 00:06:09,590
接下来的10周我们将讨论面向对象编程。

82
00:06:09,590 --> 00:06:13,800
剩下的部分大部分会持续大约10周。我们将讨论theizzegtrichter。

83
00:06:15,000 --> 00:06:18,460
算法的设计和实现是至关重要的一部分。这是一个关键组成部分。最后，我们将简要回顾。

84
00:06:18,460 --> 00:06:21,920
和算法。这是关键部分。最后，我们将快速回顾基础知识。

85
00:06:21,920 --> 00:06:22,800
基本技能

86
00:06:22,980 --> 00:06:23,420
技能。好的。

87
00:06:23,600 --> 00:06:24,120
好的。当然。

88
00:06:24,120 --> 00:06:27,780
好的。本课程主要使用的数据库将是SQL。

89
00:06:27,780 --> 00:06:31,440
本课程主要关注数据库，特别是SQL。这是课程的概述。今天，我想

90
00:06:31,440 --> 00:06:35,940
今天，我想让大家去你们的Canvas，因为我有一个公告要发布。

91
00:06:35,940 --> 00:06:40,440
大家，请去你们的Canvas。我有一个公告要发布。

92
00:06:40,440 --> 00:06:46,120
请查阅公告获取课堂材料。我们对课堂有严格的规定。

93
00:06:46,120 --> 00:06:51,800
请查阅课堂材料。我们对课堂有严格的规定。

94
00:06:51,800 --> 00:06:54,710
同学们，当我说'everybody'时，可以使用笔记本电脑，没问题的，你们可以使用笔记本电脑。

95
00:06:54,710 --> 00:06:57,620
我对每个人说，你可以使用笔记本电脑，没问题，继续使用笔记本电脑。如果我说关闭笔记本电脑

96
00:06:57,620 --> 00:07:00,750
关闭笔记本电脑，让我们做一些应该在纸上完成的工作。

97
00:07:00,750 --> 00:07:03,880
如果你需要做一些应该在纸上完成的事情，尽量避免使用笔记本电脑。

98
00:07:04,220 --> 00:07:08,310
课堂上不要使用笔记本电脑。而且，在整个课程过程中，请不要使用手机。

99
00:07:08,310 --> 00:07:12,400
在整个课程中，请不要使用手机。您可以使用平板电脑记笔记，但是

100
00:07:12,400 --> 00:07:13,820
使用平板电脑记笔记，但不要使用手机。明白吗？

101
00:07:20,540 --> 00:07:21,780
请不要使用手机。明白吗？好的，我认为这就是全部了。

102
00:07:21,800 --> 00:07:24,480
好的，我相信那就是全部了。我建议我们先花几分钟，因为这是第一堂课。

103
00:07:24,480 --> 00:07:27,160
我认为我们应该在开始时花几分钟，因为这是第一堂课。

104
00:07:27,160 --> 00:07:29,910
每个人都想稍微介绍一下自己，这样大家就可以彼此认识。

105
00:07:29,910 --> 00:07:32,660
您想简单介绍一下自己，让大家彼此了解吗？我们从

106
00:07:33,340 --> 00:07:38,520
让我们从王欢开始。是的。请你们自我介绍。是的，是的，转过身来。大家，转过身来。

107
00:07:38,520 --> 00:07:43,700
王欢，请向你的同学们介绍一下自己。

108
00:07:45,780 --> 00:07:51,780
通过分享你的姓名、来自哪里、背景以及其他任何想说的内容来向同学们介绍自己。

109
00:07:51,780 --> 00:07:55,120
请分享你的姓名、来自哪里以及你的背景。随意分享任何你希望同学们了解的信息。

110
00:08:21,780 --> 00:08:23,300
与同学们分享一些关于你自己的事情。她有电话号码吗？

111
00:08:23,300 --> 00:08:25,040
她有名字和编号吗？你的学生呢？

112
00:08:28,840 --> 00:08:32,180
你的学生们呢？他们知道所有的问题吗？

113
00:08:32,260 --> 00:08:32,660
他们知道所有的问题吗？

114
00:08:32,700 --> 00:08:33,680
不，我已经有了。

115
00:08:36,000 --> 00:08:36,840
不，我已经有它们了。好的。

116
00:09:22,240 --> 00:09:26,520
好的，谢谢。

117
00:09:51,780 --> 00:09:57,080
好的，谢谢你。我的感激之情久久难忘。

118
00:10:21,840 --> 00:10:23,120
好的，谢谢你。这是一段漫长的旅程。好的，谢谢你。

119
00:10:51,780 --> 00:11:02,680
好的，谢谢。

120
00:11:21,780 --> 00:11:28,500
谢谢您。

121
00:11:54,420 --> 00:11:55,500
嗯，好的。谢谢。

122
00:11:56,440 --> 00:12:03,140
好的，谢谢。您有其他编程语言技能或之前的经验吗？

123
00:12:04,420 --> 00:12:04,980
你有其他编程语言的经验吗？

124
00:12:06,220 --> 00:12:07,600
当然。您能拼写您的名字吗？

125
00:12:08,220 --> 00:12:09,520
请问您能拼写您的名字吗？

126
00:12:09,920 --> 00:12:11,520
你的名字怎么拼写？你的名字不在这里。

127
00:12:11,640 --> 00:12:13,420
您的名字不在这里列出。您的名字还没有添加到Canvas。

128
00:12:14,420 --> 00:12:15,460
你的名字还没有出现在Canvas上。请确保添加进去。

129
00:12:20,620 --> 00:12:23,000
请务必参加。不，不，那是韦恩。

130
00:12:27,020 --> 00:12:29,080
不，不，不，那是韦恩。哦，我，好的，是的。

131
00:12:30,400 --> 00:12:34,600
哦，好的，是的。我感到困惑，因为我一直以为我是个男孩。

132
00:12:35,980 --> 00:12:36,900
哦，我感到困惑，因为我一直以为我是个男孩。这是可能的。

133
00:12:37,680 --> 00:12:38,960
这是可能的。是的，没问题。

134
00:12:39,300 --> 00:12:40,520
好的，好的。你好。

135
00:12:41,220 --> 00:12:41,780
你好。

136
00:12:42,360 --> 00:12:42,920
请提供需要翻译的文本。

137
00:12:53,680 --> 00:12:56,600
请提供需要修改和翻译的文本。

138
00:12:56,600 --> 00:13:00,280
请提供需要修改和翻译的文本。

139
00:13:00,280 --> 00:13:01,740
请提供需要修改和翻译的文本。

140
00:13:01,740 --> 00:13:01,920
请提供需要修改和翻译的文本。

141
00:13:01,920 --> 00:13:05,360
请提供需要翻译的文本。

142
00:13:05,360 --> 00:13:05,460
请提供需要修改和翻译的文本。

143
00:13:05,460 --> 00:13:08,160
请先完善英文文本。

144
00:13:08,160 --> 00:13:09,820
请提供需要修改和翻译的文本。

145
00:13:09,820 --> 00:13:11,860
请提供需要修改和翻译的文本。

146
00:13:11,860 --> 00:13:12,000
请在将英文文本翻译成中文之前对其进行修改。

147
00:13:12,000 --> 00:13:12,080
请在将英文文本翻译成中文之前对其进行修改。

148
00:13:12,080 --> 00:13:12,120
请提供需要修改和翻译的文本。

149
00:13:12,120 --> 00:13:13,320
请提供需要修改和翻译的文本。

150
00:13:21,280 --> 00:13:22,200
请提供需要修改和翻译的文本。

151
00:13:27,140 --> 00:13:28,060
请提供需要修改和翻译的文本。

152
00:13:28,060 --> 00:13:28,160
请提供需要翻译的文本。

153
00:13:28,160 --> 00:13:28,280
请提供需要修改和翻译的文本。

154
00:13:28,280 --> 00:13:29,040
请提供需要修改和翻译的文本。

155
00:13:29,040 --> 00:13:29,140
请提供需要修改和翻译的文本。

156
00:13:29,140 --> 00:13:29,560
请提供需要修改和翻译的文本。

157
00:13:29,560 --> 00:13:30,020
请提供需要修改和翻译的文本。

158
00:13:30,020 --> 00:13:30,580
请提供需要修改和翻译的文本。

159
00:13:34,520 --> 00:13:35,440
请提供需要修改和翻译的文本。

160
00:13:35,440 --> 00:13:35,500
请提供需要修改和翻译的文本。

161
00:13:35,500 --> 00:13:35,540
请提供需要修改和翻译的文本。

162
00:13:38,400 --> 00:13:39,320
请提供需要修改和翻译的文本。

163
00:13:39,320 --> 00:13:55,880
请先完善英文文本。

164
00:13:55,880 --> 00:13:57,440
请先完善英文文本。

165
00:13:57,440 --> 00:13:58,580
请提供需要翻译的文本。

166
00:13:58,580 --> 00:13:58,860
请在将英文文本翻译成中文之前对其进行修改。

167
00:13:58,860 --> 00:13:59,500
请提供需要修改和翻译的文本。

168
00:13:59,500 --> 00:14:00,820
请提供需要修改和翻译的文本。

169
00:14:00,820 --> 00:14:01,040
请提供需要翻译的文本。

170
00:14:09,320 --> 00:14:19,050
好的，谢谢你让我分享一点关于我自己的信息。我的名字是Jen Chi，我

171
00:14:19,050 --> 00:14:19,050
好的，谢谢你让我分享一点关于我自己的信息。我的名字是Jen Chi，我在芝加哥大学获得了大气科学博士学位。

172
00:14:19,050 --> 00:14:19,050
我毕业于芝加哥大学，获得大气科学博士学位，因此我有科学背景。毕业后，我专注于我的职业。

173
00:14:19,050 --> 00:14:28,780
我有科学背景，所以毕业后我的大部分工作都是在研究领域。

174
00:14:30,220 --> 00:14:35,940
我从事研究工作。我在加利福尼亚的NASA喷气推进实验室工作。

175
00:14:35,940 --> 00:14:43,370
我在加利福尼亚的NASA喷气推进实验室工作。我在那里工作了15年，我也在另一个地方工作。

176
00:14:43,370 --> 00:14:43,370
我在那里工作了15年，包括我目前在另一家名为The Region的公司的职位，该公司专门生产国防用导弹。

177
00:14:43,370 --> 00:14:50,800
这家公司以生产国防合同中的导弹而闻名。

178
00:14:51,100 --> 00:14:58,190
他们与NASA有合同，因此我的大部分研究工作都是在地球科学领域。

179
00:14:58,190 --> 00:15:05,280
他们还与NASA合作，因此我的大部分研究集中在地球科学、大气科学和研究课题，包括火星海洋。

180
00:15:05,940 --> 00:15:14,760
大气科学和研究课题包括火星海洋和地球大气。在后来的几年里，出现了转变...

181
00:15:14,760 --> 00:15:14,760
在后来的岁月里，研究重点转向了地球大气层，表明物理研究中存在着明显的趋势。

182
00:15:14,760 --> 00:15:23,580
在这项研究中，在开发物理模型之前存在一种向物理转移的趋势。

183
00:15:24,580 --> 00:15:29,860
您拥有物理模型。您还有牛顿的函数方程来定义您的模型，展示粒子的行为方式。

184
00:15:29,860 --> 00:15:35,140
您使用牛顿的函数方程来定义您的模型，描述了颗粒在大气和海洋中的运动方式，以及洋流的流动方式。

185
00:15:35,940 --> 00:15:41,720
强劲的风移动大气，搅动着海洋。它们影响着洋流。然而，这还不够；这发生在大约10年前。

186
00:15:42,880 --> 00:15:49,810
后来，这是不够的。这大约发生在10年前。您的目标是从数据中发现原则或模式，这就是方法。

187
00:15:49,810 --> 00:15:56,740
您希望从数据中发现原则或模式，这就是数据科学如何在各个科学领域中出现的方式。

188
00:15:57,440 --> 00:16:00,960
探讨数据科学如何应用于各个科学领域，包括我有经验的领域，以及所使用的统计模型。

189
00:16:00,960 --> 00:16:04,480
在我之前的工作经验中，我使用统计方法进行建模。

190
00:16:05,940 --> 00:16:12,080
使用一种方法对数据进行建模，尝试识别模式。这是正确的做法。

191
00:16:12,080 --> 00:16:12,080
您分析数据以识别模式，这就是我对数据科学产生兴趣的方式。最初，这个领域还没有一个专门的术语。

192
00:16:12,080 --> 00:16:18,220
我在数据科学领域开始工作时，'数据科学'这个术语还不存在。

193
00:16:19,380 --> 00:16:27,200
2018年，我进入大学学习数据科学。加入后，我也成为了健身俱乐部的一员。

194
00:16:27,200 --> 00:16:27,200
2018年，我进入大学并加入了健身俱乐部。我还在另一家名为默克的制药公司工作。

195
00:16:27,200 --> 00:16:35,020
我曾在另一家名为默克（Merck）的制药公司工作，它是美国第四大制药公司。

196
00:16:35,940 --> 00:16:38,080
我在美国第四大制药公司工作。这就是我的工作。

197
00:16:39,260 --> 00:16:42,920
因此，我在那家公司为咨询做了一些统计工作。

198
00:16:44,580 --> 00:16:46,640
在那家公司进行咨询目的的统计分析工作。因此，这对本课程很相关。

199
00:16:47,940 --> 00:16:55,600
在这门课程中，我们将专注于打下基础技能和知识。

200
00:16:55,600 --> 00:16:55,600
我们将通过各种项目来打造基础技能和知识，为您提供实践经验。

201
00:16:55,600 --> 00:17:03,260
我们将会参与许多项目，让您获得实践经验，主要集中在编程方面。

202
00:17:03,780 --> 00:17:05,700
我的大部分经验是在编程方面。

203
00:17:05,700 --> 00:17:16,470
第一件事是为那些在Python编程方面经验不是很丰富的人。

204
00:17:16,470 --> 00:17:16,470
你们中有些人可能以前有过Python编程经验，而另一些人可能完全没有任何背景。

205
00:17:16,470 --> 00:17:16,470
你们中有些人可能没有任何经验。第一步是打开这个公告，然后转到Kaggle。

206
00:17:16,470 --> 00:17:27,240
第一步是打开这个公告并访问 Kaggle，在那里有一个简短的 Python 教程。

207
00:17:28,820 --> 00:17:31,280
这是一个简短的Python教程。现在，请大家跟着我。

208
00:17:31,960 --> 00:17:35,160
现在请大家跟着我。Kaggle是一个数据科学平台。

209
00:17:36,480 --> 00:17:42,920
Kaggle是一个数据科学平台，为运行代码提供免费的计算环境。

210
00:17:42,920 --> 00:17:49,360
他们提供一个免费的编码环境，每个人都可以在那里编写和运行代码，他们还举办数据科学竞赛，这些竞赛备受推崇。

211
00:17:49,940 --> 00:17:56,850
我们还提供数据科学竞赛，这些竞赛备受推崇。虽然有些竞赛没有报名费，但大多数竞赛都有。

212
00:17:56,850 --> 00:17:56,850
有一些比赛是免费的，但大多数来自世界各地的学生参加这些比赛是为了提高他们的技能。

213
00:17:56,850 --> 00:18:03,760
许多全球学生参加比赛，以提高他们的数据科学技能。

214
00:18:04,200 --> 00:18:05,580
数据科学所需的技能。而我们将要。

215
00:18:05,700 --> 00:18:11,060
我们计划鼓励每个人参加这个活动，我们将挑选一些项目。

216
00:18:11,060 --> 00:18:16,420
我也鼓励每个人参加这个活动。我们将挑选一些项目，并要求您正确完成它们。让我们试一试。

217
00:18:17,280 --> 00:18:26,030
我要求你做对，让我们试试这个。一旦你到那里并打开这个，确保你登录，好吗？

218
00:18:26,030 --> 00:18:26,030
一旦你到那里，请确保你已经登录。我已经登录了，所以一旦你登录，你可以直接使用你的Google账号。

219
00:18:26,030 --> 00:18:26,030
您已经登录，因此一旦您登录，您将能够使用您的Google账户。您可以将您的学校账户用作您的Google账户。

220
00:18:26,030 --> 00:18:34,780
您可以使用您的学校账号作为登录谷歌的账号。

221
00:18:35,700 --> 00:18:39,640
需要帐户登录才能访问该应用程序。未登录时，功能受限。

222
00:18:39,640 --> 00:18:43,580
一旦您登录，您可以运行它；否则，您只能阅读。这在数据科学中非常重要，请不要忽视。

223
00:18:44,900 --> 00:18:53,100
在数据科学中，重要的不仅是阅读和观看，还要实践。仅仅消化信息是不够的；这只占学习过程的一半。

224
00:18:53,100 --> 00:18:53,100
光看是不够的，那只是学习的一半。你必须亲自动手去做。你必须这样做，好吗？一旦你看到这个，它是互动的。

225
00:18:53,100 --> 00:19:01,300
你必须亲自动手做。一旦你看到这个，它是互动的。这是一个你可以运行的笔记本，笔记本的优点在于互动性。

226
00:19:01,920 --> 00:19:05,480
这个笔记本允许您运行代码，并具有支持文本和图像的优势。

227
00:19:05,480 --> 00:19:09,150
不仅可以有文本，还可以有图片和嵌入式代码。让我们看看这种情况。

228
00:19:09,150 --> 00:19:12,820
代码已嵌入那里。所以，在这种情况下，让我们快速回顾一下。

229
00:19:12,820 --> 00:19:16,750
请快速查阅此内容，其余部分由你自己完成。你必须迅速完成这项任务。

230
00:19:16,750 --> 00:19:20,680
其余部分是你自己的作业。你必须在最初的两个

231
00:19:21,280 --> 00:19:24,510
在最初的两周里，你应该完成这七堂课。这不会花很长时间。

232
00:19:24,510 --> 00:19:27,740
你应该在两周内完成这七堂课。每堂课都有一个单独的笔记本，内容并不是很长。

233
00:19:27,740 --> 00:19:31,630
七本笔记本。完成它们。然后进行练习。

234
00:19:31,630 --> 00:19:35,520
首先完成这个任务。然后，有练习可以进行。

235
00:19:35,920 --> 00:19:40,280
我们可以练习。让我为您演示这个练习。

236
00:19:44,140 --> 00:19:50,440
让我向你展示这个练习。实际上，笔记本的末尾有练习题。

237
00:19:52,340 --> 00:19:56,500
在笔记本的末尾，实际上有练习题。现在轮到你了。一旦你完成了这些练习，

238
00:19:56,560 --> 00:19:57,560
现在轮到你了。练习一下，然后就轮到你了。

239
00:19:57,740 --> 00:20:04,180
现在轮到你了。如果你还没有做过这个练习，你可以在那边做。

240
00:20:04,180 --> 00:20:09,020
如果你还没有做过这个练习，你可以在那边做。这里有一些技巧你需要知道。

241
00:20:09,020 --> 00:20:13,860
这里有一些技巧，你需要弄清楚。

242
00:20:13,860 --> 00:20:20,750
要创建自己的笔记本副本，请点击这里，这样您就可以编辑它。

243
00:20:20,750 --> 00:20:27,640
确保拥有自己的笔记本副本，这样您就可以根据需要进行编辑。

244
00:20:27,640 --> 00:20:35,840
在您自己的帐户中制作一份副本。让我来做这个。点击三个点，然后选择“制作副本”。

245
00:20:35,840 --> 00:20:43,040
请将此复制到您自己的账户中。点击三个点，选择“制作副本”。现在它在您的账户中，您可以添加并运行它。

246
00:20:43,040 --> 00:20:43,840
好的，文件已复制到您的帐户。您现在可以添加并运行它。

247
00:20:43,860 --> 00:20:46,140
这只会发生在你登录后。我会等大家都登录。

248
00:20:46,140 --> 00:20:48,420
这只会发生在你登录之后。我会等大家都登录后再继续。

249
00:20:48,420 --> 00:20:50,000
在我们离开之前复制一份。

250
00:21:01,560 --> 00:21:04,600
复制然后我们可以看看当您点击此时会发生什么。

251
00:21:21,120 --> 00:21:25,700
当你点击“确定”时会发生什么？首先，请大家过去那边登录。

252
00:21:36,980 --> 00:21:41,880
好的，大家，首先，去那边登录。登录后，选择您想要的谷歌账号。

253
00:21:41,880 --> 00:21:42,860
登录后，请选择您要用于登录的谷歌账户。

254
00:21:43,860 --> 00:22:00,040
以Google身份登录。好的，请分享你的笔记本。还有其他人有问题吗？抱歉，你是指校园吗？

255
00:22:00,040 --> 00:22:10,680
好的，请把你的笔记本给我。如果其他人遇到问题，抱歉。哦，你是说校园网络？你现在可以使用它，如果不行，可以使用另一个。哦，是的，然后你可以使用个人或电子邮件。好的，谢谢。

256
00:22:10,680 --> 00:22:13,500
首先，你使用'然后'，然后你使用'其他'。哦，是的，然后你使用人或电子邮件。好的，我们需要打开这个。

257
00:22:13,860 --> 00:22:16,440
我们需要打开这个。请使用您的个人Gmail账号。

258
00:22:21,380 --> 00:22:23,160
那么，请使用您的个人Gmail。每个人都在这里吗？

259
00:22:25,620 --> 00:22:26,420
大家都在这里吗？你的笔记本在哪里？

260
00:22:26,540 --> 00:22:27,260
你的笔记本在哪里？你的笔记本电脑在哪里？

261
00:22:30,600 --> 00:22:32,880
你的笔记本在哪里？好的，也许下次吧。

262
00:22:34,420 --> 00:22:36,980
好的，那下次有谁遇到问题了吗？

263
00:22:39,280 --> 00:22:39,700
还有其他人有困难吗？明？

264
00:22:39,700 --> 00:22:39,780
明？明？

265
00:22:41,080 --> 00:22:42,640
明，你没有笔记本电脑吗？

266
00:22:43,460 --> 00:22:44,360
你没有笔记本电脑吗？你有吗？

267
00:22:46,960 --> 00:22:47,740
你有吗？在杜昂？

268
00:22:48,380 --> 00:22:48,900
你在Duong吗？好的。

269
00:22:56,780 --> 00:22:59,790
好的。一旦进入，请举手表示您在场。

270
00:22:59,790 --> 00:23:02,800
一旦进入，请举手表示您在这个阶段。

271
00:23:03,180 --> 00:23:05,300
舞台。我们复制一份，好吗？

272
00:23:07,020 --> 00:23:08,060
您想复印一份吗？会发生什么？

273
00:23:08,280 --> 00:23:08,920
发生了什么？似乎有什么问题？

274
00:23:10,740 --> 00:23:13,140
有什么问题？如果您点击这三个点会发生什么？

275
00:23:16,380 --> 00:23:17,500
当您点击这三个点时会发生什么？哦，登录。

276
00:23:18,960 --> 00:23:25,820
是的，请登录。登录后，请按照这些步骤操作，然后点击这里。

277
00:23:26,200 --> 00:23:31,100
登录后，请提及这些步骤并点击这里。所以，点击后，是三节课，对吗？

278
00:23:31,820 --> 00:23:32,860
所以，当你点击时，有三节课，对吗？点击这里。

279
00:23:34,740 --> 00:23:36,220
点击这个。然后点击这个。

280
00:23:47,840 --> 00:23:49,500
接下来，点击这个链接。然后，复制并编辑内容。

281
00:23:49,720 --> 00:23:50,140
接下来，创建一个副本并进行编辑。是的。

282
00:23:50,240 --> 00:23:50,980
当然，请继续点击这个。

283
00:23:51,220 --> 00:23:51,880
请点击这个。好的。

284
00:23:51,940 --> 00:23:58,280
好的。一旦你进入其中，你就能看到你的过去。

285
00:23:58,280 --> 00:24:04,620
一旦你进入其中，你可以访问并查看你以前的笔记。

286
00:24:05,220 --> 00:24:06,160
点击打开笔记本。

287
00:24:06,160 --> 00:24:12,460
通过点击，您可以访问您自己的图标并查看您的工作。

288
00:24:12,940 --> 00:24:16,340
您可以点击您自己的图标来访问您的工作。它会显示您在这里拥有的笔记本列表。

289
00:24:16,520 --> 00:24:19,820
这里是你拥有的笔记本清单。目前，除非你之前已经这样做过，否则你只有一个。

290
00:24:19,980 --> 00:24:24,760
所以，现在你只有一次机会，如果你以前没有做过的话。一旦你打开这个，大家，你应该进行审计。

291
00:24:24,760 --> 00:24:29,540
所以现在，一旦你打开这个，大家，你应该审查一下介绍。

292
00:24:29,540 --> 00:24:30,480
计算机导论

293
00:24:30,660 --> 00:24:34,280
任何没有参加早上计算机课程的人。

294
00:24:34,360 --> 00:24:35,600
任何没有在早上去的人。今天是8:30。

295
00:24:35,600 --> 00:24:38,360
现在是8点30分。如果你没有参加，请举手让我知道。

296
00:24:38,720 --> 00:24:39,660
如果你没有参加，请举手让我知道。谁没有参加？

297
00:24:43,040 --> 00:24:43,540
谁没有去？好的。

298
00:24:43,640 --> 00:24:45,140
好的。你需要去那个地方。

299
00:24:45,320 --> 00:24:46,100
你应该去那边。好的。

300
00:24:46,160 --> 00:24:46,700
好的，那么。你，你做得很好。

301
00:24:46,800 --> 00:24:48,080
你，你做得很好。你应该去那边。

302
00:24:49,540 --> 00:24:51,900
你应该去那里。这里教授的一切内容都包含在那堂课程中。

303
00:24:55,680 --> 00:24:57,500
这里涵盖了那堂课上所教授的一切内容。您是为此而审计。

304
00:24:57,620 --> 00:25:00,440
你为此进行审计。如果你不想，你不需要，你可以选择不审计。

305
00:25:00,440 --> 00:25:03,260
你不需要审核，但最好还是审核。

306
00:25:03,260 --> 00:25:06,730
最好进行审计。或者，您可以选择旁观而不参与，但在这种情况下，您将无法访问

307
00:25:06,730 --> 00:25:10,200
或者，您可以简单地观察，但这样做的话，您将无法访问Canvas。

308
00:25:10,200 --> 00:25:12,460
你无法访问画布或任何作业和任务。

309
00:25:12,820 --> 00:25:16,000
你不必做所有的家庭作业和作业。如果你想的话，至少可以参加，但最好每个人都参与。

310
00:25:16,000 --> 00:25:19,180
如果你想要的话，至少可以参加，但更希望每个人都参与并审查。

311
00:25:19,180 --> 00:25:19,420
请查阅并审计此事。

312
00:25:19,880 --> 00:25:23,170
除非您过去有丰富的Python经验，

313
00:25:23,170 --> 00:25:26,460
除非您过去有大量的Python经验，否则这里的每个人都是新手。

314
00:25:26,540 --> 00:25:27,800
不，我相信每个人都应该去。

315
00:25:27,980 --> 00:25:28,440
我相信每个人都应该参加。好的。

316
00:25:28,580 --> 00:25:31,800
好的。现在我会快速地回顾这里的信息。

317
00:25:31,800 --> 00:25:32,880
现在，我会快速回顾这里的信息。

318
00:25:33,000 --> 00:25:34,920
看这里。现在你有了，你有了代码。

319
00:25:35,120 --> 00:25:36,860
现在你拥有它，你拥有了代码。这被称为代码单元。

320
00:25:37,220 --> 00:25:40,760
这被称为代码单元。而这部分在这里被称为文本单元。

321
00:25:41,120 --> 00:25:45,660
这部分被称为文本单元。双击它，您可以编辑内容。

322
00:25:46,380 --> 00:25:48,480
双击这个，双击这个，就可以编辑它。两个单元格都可以编辑。

323
00:25:48,780 --> 00:25:52,960
这两个单元格都可以编辑。编辑完成后，点击“运行”按钮。

324
00:25:52,960 --> 00:25:57,140
当您完成编辑后，请点击'运行'按钮。

325
00:25:57,140 --> 00:25:57,500
这就是它的变化方式。

326
00:25:58,700 --> 00:25:59,520
它已经修好了。

327
00:26:00,200 --> 00:26:00,760
它已经修好了。是的。

328
00:26:00,760 --> 00:26:04,840
是的，请将光标移动到此文本单元上，它将被更正。

329
00:26:05,600 --> 00:26:10,910
运行此文本单元以进行修正。接下来，对于此部分，请注意将零赋值给此变量。

330
00:26:10,910 --> 00:26:16,220
现在，针对这部分，将零赋给这个变量，然后执行一些简单的操作。

331
00:26:16,220 --> 00:26:20,800
然后根据一些条件进行一些简单的计算，然后打印结果。

332
00:26:21,220 --> 00:26:25,840
根据特定条件进行计算，然后打印结果。要运行此代码，只需点击即可。

333
00:26:26,100 --> 00:26:28,080
要运行这段代码，只需点击这里。输出将显示在这里。

334
00:26:28,480 --> 00:26:29,920
看这里，这是输出。你也可以做同样的事。

335
00:26:29,920 --> 00:26:33,240
你也可以这样做。你也可以对此进行修改。

336
00:26:33,800 --> 00:26:42,460
您也可以对此进行修改。因此，您可以在打印内容中添加额外的内容。

337
00:26:42,720 --> 00:26:44,300
因此，随意在打印中添加额外信息。让我为您重新运行。

338
00:26:44,460 --> 00:26:45,360
所以，让我再运行一次。看这里。

339
00:26:45,480 --> 00:26:45,800
看这里。好的。

340
00:26:46,320 --> 00:26:52,880
好的。那么，你想怎样学习编程？

341
00:26:53,220 --> 00:26:58,720
那么，你想要如何学习编程呢？学习编程的最佳方式是通过编写代码。

342
00:26:58,720 --> 00:27:00,600
学习编程的最佳方式是通过获取他人编写的代码。

343
00:27:00,920 --> 00:27:02,520
那是由别人做的。请尝试理解这一点。

344
00:27:02,720 --> 00:27:04,580
尝试理解这个。但是，你如何理解这个？

345
00:27:04,960 --> 00:27:07,120
但是你如何理解这个？只是试着玩一下。

346
00:27:07,320 --> 00:27:09,800
尝试实验一下。进行修改并观察结果。

347
00:27:10,200 --> 00:27:15,340
尝试进行修改并观察结果。验证您的理解是否与您的期望和观察相符。

348
00:27:15,580 --> 00:27:16,040
检查一下你的理解是否与你的期望和观察一致。好的。

349
00:27:16,080 --> 00:27:17,160
好的。这是学习的最佳方式。

350
00:27:17,400 --> 00:27:18,720
这是学习的最佳方式：通过实践。

351
00:27:25,260 --> 00:27:26,980
通过这样做。就是这样。

352
00:27:26,980 --> 00:27:28,700
这就是。

353
00:27:28,700 --> 00:27:32,880
这不是这本书。

354
00:27:33,120 --> 00:27:39,480
那不是我们需要的书。让我快速复习一下，因为我们稍后会用另一本笔记本。

355
00:27:39,640 --> 00:27:44,900
让我快速回顾一下，因为我们稍后会转到另一个笔记本。对于这个笔记本，如果你想添加一个新单元。

356
00:27:45,100 --> 00:27:46,280
要在这个笔记本中添加一个新单元格，请按照以下步骤操作。

357
00:27:46,460 --> 00:27:47,020
所以，让我们在这里看看。

358
00:27:47,580 --> 00:27:50,100
这里，我宁愿不对这段代码进行修改。

359
00:27:51,820 --> 00:27:57,180
我不想修改这段代码，因为一旦我修改，如果出错，我可能会忘记原始代码。

360
00:27:57,440 --> 00:27:58,600
因为如果我进行修改，如果出错可能会忘记原始代码。我无法承担这样的风险。

361
00:27:58,700 --> 00:28:02,920
我无法恢复。你可以做的是简单地复制代码，然后按下Command A或Control A。

362
00:28:02,920 --> 00:28:07,140
要恢复，请使用Command+A或Control+A复制代码。

363
00:28:07,140 --> 00:28:10,710
输入'command A'复制代码，然后插入一个新单元格。

364
00:28:10,710 --> 00:28:14,280
复制代码，通过粘贴添加新单元格。

365
00:28:14,280 --> 00:28:20,900
您现在可以通过输入加号代码来添加新单元格。然后您可以在此粘贴内容。

366
00:28:25,180 --> 00:28:28,850
看到这个加号码了吗？添加一个新单元格。现在你可以在这里粘贴。复制并粘贴。你可以向上移动它。让我把它向上移动，好吗？

367
00:28:28,850 --> 00:28:32,520
您可以复制粘贴以将其向上移动。让我现在将其向上移动，好吗？

368
00:28:32,520 --> 00:28:36,170
现在，一旦你完成了那个，你可以在这里进行修改。让我们看看，我不确定是或不是。

369
00:28:36,170 --> 00:28:39,820
先做那个，然后你可以在这里进行修改。让我们看看，我不确定这样行不行。

370
00:28:39,820 --> 00:28:44,070
让我们看看这是否有效，确保平等权利。

371
00:28:44,070 --> 00:28:48,320
让我们确保每个人都拥有平等的权利，看看这种方法是否有效。

372
00:28:48,320 --> 00:28:50,660
好的，这样也可以，对吧？这就是你做的方式。

373
00:28:50,900 --> 00:28:54,050
这就是正确的做法。只需进行修改，您就能立即看到结果。这就是它的美妙之处。

374
00:28:54,050 --> 00:28:57,200
进行更改，立即看到结果，这就是使用笔记本的美妙之处。

375
00:28:57,200 --> 00:29:01,350
这个笔记本非常互动，您可以立即看到结果。

376
00:29:01,350 --> 00:29:05,500
这是非常互动的，你会立即看到结果。这是一个很棒的功能。

377
00:29:05,500 --> 00:29:10,700
好的，那是一个学习的地方，就是Kaggle。另一个地方是Google Colab。我将为您提供。

378
00:29:10,700 --> 00:29:15,900
学习如何使用Kaggle和Google Colab。我会给你提供一个笔记本。

379
00:29:37,900 --> 00:29:41,040
我有一个笔记本，所以我会给你一个，你需要打开它。

380
00:30:00,140 --> 00:30:06,290
我会给你一本笔记本，你需要打开它。这本笔记本包含了今天我们要做的任务，你需要完成这些任务。

381
00:30:06,290 --> 00:30:12,440
这本笔记本包含了今天要做的任务。请完成我删除的部分。

382
00:30:12,440 --> 00:30:16,160
我在部分I中删除了一些代码，需要你来填写。

383
00:30:23,200 --> 00:30:24,900
我有一些需要完成的代码，让我在你填写之前先提供一个概览。

384
00:30:33,300 --> 00:30:35,840
让我分享一下这个概述。我现在要把它放在画布上。

385
00:30:42,460 --> 00:30:46,440
我现在要把它转移到画布上，这样就会变成一本课堂笔记本。

386
00:30:49,940 --> 00:30:50,820
这将是一本课堂笔记本。

387
00:30:50,900 --> 00:31:09,720
这是第一个。你应该看看这个。你会怎么处理这个？

388
00:31:09,720 --> 00:31:15,040
第一个是正确的。你应该看到这个。你对待这个的方式有点不同但非常相似。点击这个以确保你已登录。

389
00:31:15,040 --> 00:31:18,050
略有不同但非常相似。点击此链接确保您已用谷歌账号登录。点击这里，您将看到以下内容。

390
00:31:18,050 --> 00:31:21,060
点击此链接以访问您的谷歌账户并查看信息。

391
00:31:21,060 --> 00:31:28,780
查看此内容，一旦拥有，请制作一份副本。接下来你会做什么？

392
00:31:28,780 --> 00:31:33,770
一旦你有了這個，複製一份。接下來該做什麼？我會等大家打開這個。好的，一旦打開，去文件，點擊這裡。

393
00:31:33,770 --> 00:31:38,760
请等待每个人打开这个。一旦每个人都打开了，请转到文件并点击这里。

394
00:31:38,760 --> 00:31:41,980
前往此位置并在云端硬盘中保存副本。

395
00:31:46,600 --> 00:31:54,220
在Drive中保存一份副本。打开一个新的副本需要几秒钟，一旦您打开它，

396
00:31:54,220 --> 00:32:02,740
打开一个新副本需要几秒钟时间。一旦打开，这个笔记本将保存在您的谷歌云端硬盘中，方便您随时访问。

397
00:32:02,740 --> 00:32:08,220
笔记本位于您的Google云端硬盘中。您可以在“我的云端硬盘”中找到它，您会看到一个黄色文件夹，里面包含有笔记本和一张黄色照片。

398
00:32:08,220 --> 00:32:14,500
你在我的驱动器里，你会看到一个黄色的文件夹，里面有一张名为'Colab Notebook'的黄色照片。你可以自由移动它，如果需要的话。

399
00:32:14,500 --> 00:32:14,680
它被称为Colab笔记本。在里面，你可以移动。你应该可以的，好吗？

400
00:32:14,680 --> 00:32:19,500
你应该将所有课堂笔记整理到特定的文件夹中，以便针对每门课程。

401
00:32:19,500 --> 00:32:22,820
将所有课堂笔记整理到特定文件夹中。为每门课程创建一个文件夹，将所有相关材料放入其中，以便轻松查阅。

402
00:32:22,820 --> 00:32:26,140
创建一个文件夹，把所有东西放进去，这样对每个人都会更方便，好吗？

403
00:32:27,420 --> 00:32:37,420
每个人都复制了一份，让我们使用面向对象编程来审查一下。

404
00:32:37,420 --> 00:32:44,280
让我们复制一份，好的。那么，让我们来回顾一下。在面向对象编程中，我们不是逐行编写代码；而是编写代码，它...

405
00:32:44,280 --> 00:32:52,120
这意味着我们不是逐行编写代码，而是通过书写文字来创建代码。因此，我们不是机械地编码，而是创造性地编码。

406
00:32:52,120 --> 00:32:55,020
我们通过书写文字来创造代码，因此我们没有使用任何现成的代码。所有这些计算都是我们使用 Webplugs 自行解决的。

407
00:32:55,020 --> 00:32:59,660
您进行的计算是我们使用Webplugs开发的代码。它将指导您在需要时如何刷新浏览器。

408
00:33:01,620 --> 00:33:03,940
我会指导你如何刷新浏览器。当我们打开浏览器后，请按照说明进行操作，然后我们继续前往悟空的地方。

409
00:33:03,940 --> 00:33:11,500
我打开浏览器按照说明进行操作，现在我们可以开始解决 x 的问题，先从 0.16 开始，然后是 0.17。

410
00:33:11,500 --> 00:33:13,100
我们现在应该能够解决 x 0.16 到 x 0.17，显然是小圆形夸耀视频。

411
00:33:13,100 --> 00:33:17,060
在屋顶上加一个小圆窗户，然后是门，就完成了。

412
00:33:18,280 --> 00:33:21,840
首先，处理屋顶，然后是门，然后你就完成了。在完成模块时，这个顺序很重要。

413
00:33:22,820 --> 00:33:28,920
这样做的目的是，当您完成该模块时，会更容易，假设您是软件开发经理。

414
00:33:29,680 --> 00:33:33,680
这会很容易，因为你是软件开发的经理。现在，如果你有休息时间，

415
00:33:34,280 --> 00:33:39,120
有多个休息时间会让协调变得困难。现在你有了模块。

416
00:33:39,120 --> 00:33:43,280
协调将是具有挑战性的。每个小组现在都有他们分配的模块：第一组将负责这个模块，第二组将负责那个模块。

417
00:33:43,860 --> 00:33:48,420
第一组将负责这个模块，而第二组将负责那个模块。之后，组装这些组件。然后，对于经理，

418
00:33:48,620 --> 00:33:51,340
接下来，组装这个物品。至于经理，你需要关注的是，例如，如果我有这堵墙和

419
00:33:51,340 --> 00:33:54,060
你需要关注的是，想象一下我这边有这堵墙，那边有另一堵墙。

420
00:33:54,140 --> 00:33:56,940
那边还有另一面墙吗，但是你需要某种连接吗？

421
00:33:57,120 --> 00:33:59,280
然而，您必须建立某种连接，对吧？因此，您需要确定这个模块与之间的关系

422
00:33:59,280 --> 00:34:01,440
您需要澄清这个模块和那个模块之间的连接。

423
00:34:01,580 --> 00:34:04,180
这个模块确保它们能够完美对齐。

424
00:34:04,540 --> 00:34:07,380
为了能够完美地对齐在一起，它们需要彼此交流。

425
00:34:07,460 --> 00:34:09,100
因此，他们必须彼此沟通。你需要做什么？

426
00:34:09,100 --> 00:34:12,020
你需要做什么？你对编程有类似的想法吗？

427
00:34:12,300 --> 00:34:17,040
您在编程中有一个类似的概念。在过去，它被称为过程式编程。

428
00:34:17,380 --> 00:34:21,020
在过去，这种方法被称为过程式编程，任务是按顺序执行的，可以逐行执行，也可以通过函数执行。

429
00:34:21,320 --> 00:34:26,380
所以，您可以逐行操作，也可以使用函数。随着软件变得更加复杂，这种方法尤其有用。

430
00:34:26,740 --> 00:34:34,620
随着软件变得更加复杂，模块化编程语言的概念应运而生。

431
00:34:34,820 --> 00:34:37,760
模块化编程语言的概念出现了，从而推动了面向对象编程的发展。

432
00:34:37,880 --> 00:34:39,020
所以这就是面向对象的。

433
00:34:39,020 --> 00:34:42,020
在Python的情况下，

434
00:34:42,420 --> 00:34:45,800
在Python中，我们将这个概念称为类。

435
00:34:46,140 --> 00:34:49,460
我们将这个实体称为类。那么，什么是类？类就是模块本身。

436
00:34:50,340 --> 00:34:53,140
那么，什么是类？类是模块本身。它代表了模块的设计。

437
00:34:53,600 --> 00:34:55,300
类是模块的设计模式。你需要设计墙壁。

438
00:34:55,580 --> 00:34:59,980
你想要设计这堵墙。那么你对这堵墙有什么蓝图？

439
00:35:00,240 --> 00:35:01,740
你对墙壁有什么设计构想？我想要包括三扇窗户。

440
00:35:02,020 --> 00:35:05,900
我想要三个窗户，所以请在您的蓝图上指明三个窗户。

441
00:35:06,260 --> 00:35:07,700
您必须在蓝图上指明三扇窗户。此外，您还应该说明

442
00:35:09,020 --> 00:35:10,920
你还需要说一下墙的另一边是什么。

443
00:35:11,360 --> 00:35:12,820
墙的另一边是你的创作。

444
00:35:13,220 --> 00:35:14,620
这是你的设计。一旦你完成了设计，

445
00:35:14,960 --> 00:35:16,380
一旦您确定了设计，您就可以生产多份副本。

446
00:35:16,520 --> 00:35:18,580
你可以创造许多不同的墙壁。

447
00:35:19,460 --> 00:35:22,540
有许多不同的墙。这些墙中的每一面都是由混凝土建成的。

448
00:35:22,720 --> 00:35:23,880
那些不同的墙是混凝土建造的。它们是真实的墙。

449
00:35:24,320 --> 00:35:26,100
这是一堵真实的墙。你的定义，

450
00:35:26,460 --> 00:35:27,600
你的定义，作为蓝图，

451
00:35:27,860 --> 00:35:28,900
蓝图并不是一堵真实的墙。

452
00:35:29,100 --> 00:35:30,120
这不是一堵真正的墙。它是其他东西。

453
00:35:30,920 --> 00:35:32,080
这是一件事情；这取决于你。

454
00:35:32,760 --> 00:35:34,460
这是你的设计，所以你决定课程的概念。

455
00:35:34,980 --> 00:35:36,540
因此，课程的概念是关于设计的。

456
00:35:37,400 --> 00:35:38,260
类是一个设计概念。它作为一个蓝图。

457
00:35:39,020 --> 00:35:39,220
这是一个蓝图。这不是真实的。

458
00:35:40,620 --> 00:35:41,740
这不是真的。来自课堂。

459
00:35:41,920 --> 00:35:44,720
你可以从课堂中创造真实的东西。

460
00:35:45,580 --> 00:35:46,600
你有能力创造有形物品。这些被称为对象。

461
00:35:46,960 --> 00:35:49,680
那被称为对象。因此，这是两个关键重要的概念。

462
00:35:50,140 --> 00:35:51,720
这就是两个关键重要的概念。第一个是类。

463
00:35:52,260 --> 00:35:53,800
第一，班级。班级是蓝图。

464
00:35:54,500 --> 00:35:56,580
课程是蓝图。它记录在纸上。

465
00:35:56,760 --> 00:35:58,280
它写在纸上。然而，它不是一个实物。

466
00:35:58,720 --> 00:35:59,680
好的，这不是真的。只是存在于纸上。

467
00:35:59,780 --> 00:36:01,800
在纸上。一旦你有了设计，

468
00:36:02,080 --> 00:36:03,300
一旦您确定了设计，您就可以开始制作。

469
00:36:04,340 --> 00:36:05,560
您可以根据设计进行创作。

470
00:36:05,680 --> 00:36:07,180
根据设计制作实物。

471
00:36:07,260 --> 00:36:08,320
将您的想法变为现实。这就是我们所称之为对象。

472
00:36:08,320 --> 00:36:08,780
那被称为对象。明白吗？

473
00:36:09,260 --> 00:36:11,100
好的。因此，在Python中，

474
00:36:13,080 --> 00:36:14,780
在Python中，一切皆为对象。

475
00:36:16,220 --> 00:36:18,080
一切皆为对象。我们稍后会讨论这个。

476
00:36:18,160 --> 00:36:19,320
我们稍后会处理这个问题。一切皆为对象。

477
00:36:20,040 --> 00:36:21,120
一切皆为对象。如果它是一个对象，

478
00:36:21,720 --> 00:36:24,160
如果它是一个对象，在面向对象编程中，

479
00:36:24,600 --> 00:36:27,960
在面向对象编程中，拥有一个类是一个基本概念。

480
00:36:28,360 --> 00:36:32,060
它表示它属于某个类别，并且是根据特定设计创建的。

481
00:36:32,380 --> 00:36:34,020
它是根据蓝图创建的。这个蓝图是一个类。

482
00:36:34,820 --> 00:36:35,840
那个蓝图是经典的。让我们来看看吧。

483
00:36:37,600 --> 00:36:38,540
让我们在Python中看看这个。

484
00:36:39,120 --> 00:36:40,440
在Python中，您可以创建列表。

485
00:36:40,640 --> 00:36:41,660
你可以拥有一个列表。你可以拥有一个字符串。

486
00:36:41,920 --> 00:36:42,900
你可以拥有一个字符串。你可以拥有一个字典。

487
00:36:44,420 --> 00:36:45,500
你可以拥有一本词典。所有这些，

488
00:36:45,660 --> 00:36:46,320
所有这些应该是。

489
00:36:46,460 --> 00:36:48,160
你应该学会这个。

490
00:36:48,760 --> 00:36:50,860
你应该从我刚给你的七本笔记本中学习。

491
00:36:51,020 --> 00:36:52,100
我刚给了你七本笔记本，所以你有清单。

492
00:36:52,200 --> 00:36:52,860
你有列表和一个字符串。

493
00:36:53,100 --> 00:36:55,180
您有一个包含不同类型数据的字符串。

494
00:36:55,440 --> 00:36:57,180
这些是不同类型的数据。如果你有这个，

495
00:36:57,400 --> 00:36:58,020
如果你有的话，请告诉我。

496
00:36:58,580 --> 00:36:59,820
让我用这个代替。

497
00:37:00,040 --> 00:37:00,940
让我使用这个，而不是那个。

498
00:37:02,280 --> 00:37:03,820
让我更具体一些。

499
00:37:04,560 --> 00:37:05,040
更具体。

500
00:37:05,660 --> 00:37:06,220
所以，现在，

501
00:37:06,940 --> 00:37:07,400
现在，那是你的。

502
00:37:07,600 --> 00:37:09,140
这就是我想让你做的。

503
00:37:09,220 --> 00:37:09,660
我想让你去做。好的，现在，

504
00:37:09,740 --> 00:37:10,540
好的，请现在复制这个。

505
00:37:10,820 --> 00:37:12,300
复制这个。添加一个新单元格。

506
00:37:12,920 --> 00:37:13,480
添加一个新单元格。

507
00:37:13,540 --> 00:37:17,180
现在，您想要创建一个列表。

508
00:37:17,480 --> 00:37:17,780
你想要创建一个列表。

509
00:37:17,860 --> 00:37:18,860
现在，在Python中，

510
00:37:18,940 --> 00:37:20,480
在Python中，列表用于此目的。

511
00:37:20,600 --> 00:37:22,220
这是一个用方括号括起来的列表。

512
00:37:24,780 --> 00:37:26,640
这是一个方括号，现在后面跟着一个逗号。

513
00:37:26,840 --> 00:37:28,940
现在后面跟着一个逗号。你可以把东西放在这里。

514
00:37:29,180 --> 00:37:31,380
你可以把物品放在这里。它们不一定是数字。

515
00:37:31,660 --> 00:37:32,000
它不一定是数字。它可以是任何东西。

516
00:37:32,000 --> 00:37:33,960
你可以有一个字符串。

517
00:37:33,960 --> 00:37:35,440
您可以使用字符串。字符串必须用引号括起来。

518
00:37:35,800 --> 00:37:37,360
字符串必须用引号括起来。您可以将它们混合在一起。

519
00:37:37,600 --> 00:37:38,740
当然，你可以将它们混合在一起。但这是一个列表。

520
00:37:38,880 --> 00:37:40,840
然而，这是一个列表，类似于购物清单。

521
00:37:41,120 --> 00:37:43,260
这就像是一个购物清单。因此，列表指的是一个对象。

522
00:37:43,440 --> 00:37:43,960
所以'列表'意味着一个对象，对象。

523
00:37:44,120 --> 00:37:46,520
物体，在特定顺序中。

524
00:37:46,880 --> 00:37:47,540
有序序列中的对象。这是一个序列。

525
00:37:47,740 --> 00:37:48,120
这是一个序列吗？

526
00:37:48,200 --> 00:37:49,200
这样对吗？所以，就是这样。

527
00:37:49,640 --> 00:37:51,020
所以就是这样。一旦我有了列表，

528
00:37:51,160 --> 00:37:53,680
一旦我有了列表，列表中包含一个名为class的属性。

529
00:37:54,380 --> 00:37:54,940
列表有一个名为class的属性。

530
00:37:55,060 --> 00:37:56,620
好的，那个课程已经被命名。

531
00:37:57,020 --> 00:37:58,320
那个班级有一个名字。它叫什么？

532
00:37:58,340 --> 00:38:01,760
我在这里要做的是创建一个列表。

533
00:38:02,320 --> 00:38:02,880
我在这里做的是创建一个列表。好的。

534
00:38:02,880 --> 00:38:03,800
好的，这就是第一部分。

535
00:38:04,220 --> 00:38:06,720
这是初始部分。创建一个列表。

536
00:38:07,700 --> 00:38:08,680
创建一个列表。

537
00:38:08,860 --> 00:38:10,340
然后，从那个列表中，

538
00:38:10,560 --> 00:38:12,360
从列表中检索属性。

539
00:38:12,980 --> 00:38:14,940
调用它的属性。属性就像你的年龄一样。

540
00:38:15,160 --> 00:38:15,580
财产就像你的年龄和名字。

541
00:38:15,780 --> 00:38:16,900
请提供您的姓名和头发颜色。

542
00:38:17,100 --> 00:38:17,780
你的头发颜色，你的体重。

543
00:38:17,860 --> 00:38:18,340
你的体重和身高。

544
00:38:18,520 --> 00:38:20,240
这是你的身高。这是你的属性之一。

545
00:38:20,740 --> 00:38:21,380
这些是你的属性。现在，

546
00:38:21,420 --> 00:38:21,940
现在，课堂。

547
00:38:22,220 --> 00:38:25,260
除了类别，对象还具有这些属性。

548
00:38:25,660 --> 00:38:27,420
该对象还具有这些属性。其中一个属性被称为

549
00:38:27,420 --> 00:38:28,460
其中一个属性被命名为下划线。

550
00:38:28,780 --> 00:38:29,700
下划线，下划线类。

551
00:38:30,720 --> 00:38:31,360
下划线类。

552
00:38:31,360 --> 00:38:33,540
每次看到这个下划线时，

553
00:38:33,660 --> 00:38:33,860
每次看到这个下划线，下划线，

554
00:38:34,120 --> 00:38:37,200
下划线表示这是Python的内置功能。

555
00:38:37,420 --> 00:38:37,940
这意味着这是Python的内置功能。

556
00:38:38,120 --> 00:38:39,820
通常情况下，您不需要担心这个。

557
00:38:40,360 --> 00:38:42,140
除非你有特殊目的，否则你不需要担心这个。

558
00:38:42,660 --> 00:38:45,020
除非您有特定目的，否则它是对用户隐藏的东西。

559
00:38:45,460 --> 00:38:47,640
这是对用户隐藏的东西。我们这样做是为了展示。

560
00:38:47,640 --> 00:38:49,840
我们这样做是为了展示，让您更好地理解。

561
00:38:50,240 --> 00:38:51,720
你对什么是课程有很好的理解吗？

562
00:38:51,960 --> 00:38:54,620
什么是类？为什么我看到的一切都是对象？

563
00:38:55,320 --> 00:38:56,860
为什么我看到的一切都是物体？因此，这就是一个物体。

564
00:38:57,600 --> 00:39:00,180
这是一个对象。这个对象的蓝图是什么？

565
00:39:00,180 --> 00:39:01,420
这是什么的蓝图？那很经典。

566
00:39:02,120 --> 00:39:04,420
这很有品味。而且这个班级有一个名字。

567
00:39:04,560 --> 00:39:06,320
这个类有一个名称，名称将会显示。

568
00:39:06,600 --> 00:39:08,240
点名称将显示。因此，如果您运行此代码，

569
00:39:08,460 --> 00:39:10,100
如果你运行这段代码，第一行将被打印出来。

570
00:39:10,580 --> 00:39:11,220
打印出第一行。

571
00:39:11,300 --> 00:39:14,300
好的，第一次启动这个过程时，

572
00:39:14,460 --> 00:39:15,260
第一次启动时，请看这里。

573
00:39:15,300 --> 00:39:15,560
看这里，建立连接。

574
00:39:15,800 --> 00:39:16,760
连接中，请耐心等待。

575
00:39:17,300 --> 00:39:19,780
这需要一些时间。将为您分配一台计算机。

576
00:39:19,780 --> 00:39:20,780
一台计算机将从谷歌分配给您。

577
00:39:21,260 --> 00:39:24,840
你有一组来自谷歌的计算设备。

578
00:39:25,360 --> 00:39:27,800
您有一组计算设备，您将其视为一台真正的计算机。

579
00:39:28,280 --> 00:39:29,240
你应该把这当作一台真正的电脑。然后，

580
00:39:29,240 --> 00:39:31,960
此外，您可以选择的一个选项是点击这里。

581
00:39:32,460 --> 00:39:33,020
你可以做的一件事就是点击这里。

582
00:39:33,120 --> 00:39:33,780
看，它正在通知你，

583
00:39:33,840 --> 00:39:34,600
它告诉你，点击这里。

584
00:39:38,860 --> 00:39:41,960
点击这里查看什么是记忆。

585
00:39:41,960 --> 00:39:43,980
它显示您拥有的内存和磁盘信息。

586
00:39:44,140 --> 00:39:44,780
你有什么类型的磁盘？让我看看。

587
00:39:44,820 --> 00:39:45,980
嗯，你看，我有12GB的内存。

588
00:39:46,380 --> 00:39:48,660
我有12GB的内存容量，但我只使用了1GB。

589
00:39:48,940 --> 00:39:51,660
我只使用了一千兆字节的存储空间。我的磁盘大小是10千兆字节。

590
00:39:51,840 --> 00:39:52,580
我的磁盘大小是10,100。

591
00:39:53,080 --> 00:39:54,460
我已经使用了100中的32。

592
00:39:56,480 --> 00:39:58,920
我使用了32。我没有使用那么多。

593
00:39:58,920 --> 00:40:00,700
我没有用太多，因为它是32。

594
00:40:00,920 --> 00:40:02,580
因为32的存在，你需要拥有这个系统。

595
00:40:02,740 --> 00:40:03,400
你需要有系统和Python。

596
00:40:03,600 --> 00:40:04,560
您的计算机已安装了Python。

597
00:40:04,700 --> 00:40:06,600
所有东西都已经安装好了。所以那就是预装的。

598
00:40:09,580 --> 00:40:10,700
这是预装的软件。我们继续在这里。

599
00:40:11,600 --> 00:40:12,780
所以，这里是教室。

600
00:40:13,280 --> 00:40:15,400
这是名为list的类。

601
00:40:16,320 --> 00:40:16,880
类名是'list'。

602
00:40:17,040 --> 00:40:17,600
好的，现在。

603
00:40:17,720 --> 00:40:18,640
现在，如果你这样做，

604
00:40:18,740 --> 00:40:19,860
如果你这样做，请删除这个名称。

605
00:40:20,320 --> 00:40:21,200
删除这个名称。让我们继续。

606
00:40:21,780 --> 00:40:22,680
让我们继续。没有它，

607
00:40:23,240 --> 00:40:24,220
没有这个，没有这个，

608
00:40:24,400 --> 00:40:25,740
没有这个，它仍然会被打印。

609
00:40:26,280 --> 00:40:27,700
它也将被打印。它现在正在打印。

610
00:40:27,880 --> 00:40:28,160
现在它打印，例如，

611
00:40:28,920 --> 00:40:29,880
就这样说。

612
00:40:30,140 --> 00:40:31,560
那是什么意思？

613
00:40:31,720 --> 00:40:34,700
那是什么意思？这意味着我正在打印一个对象。

614
00:40:35,000 --> 00:40:41,300
这意味着我正在打印一个对象。这个对象属于一个列表类。

615
00:40:41,780 --> 00:40:42,800
这个对象属于列表类。好的。

616
00:40:42,860 --> 00:40:45,580
好的。那么，这意味着这件事，

617
00:40:45,740 --> 00:40:48,360
所以，这意味着这个东西是一个对象。

618
00:40:48,740 --> 00:40:52,200
它是一个对象。它是它的蓝图。

619
00:40:52,280 --> 00:40:53,120
这是课程的蓝图。

620
00:40:53,320 --> 00:40:54,920
这是一个教室。那个教室在那边。

621
00:40:55,660 --> 00:40:57,820
这个班级是一样的。这个也是一样的。

622
00:40:57,820 --> 00:40:58,260
同样对于这个，字符串。

623
00:40:58,660 --> 00:41:00,760
字符串，字典同理。

624
00:41:01,180 --> 00:41:04,280
字典也是类似情况。让我将其转换为具体字符串。

625
00:41:04,640 --> 00:41:07,240
让我举一个具体的例子来说明这一点。字符串就是一系列字符。

626
00:41:07,320 --> 00:41:08,200
所以一个字符串就是简单地这样。

627
00:41:08,480 --> 00:41:08,800
就这样。好的。

628
00:41:09,300 --> 00:41:09,900
好的。请提供报价。

629
00:41:09,940 --> 00:41:11,080
引号，撇号

630
00:41:11,140 --> 00:41:11,700
单引号，双引号。

631
00:41:11,820 --> 00:41:12,340
双引号无关紧要。

632
00:41:12,920 --> 00:41:13,520
这没关系。

633
00:41:13,520 --> 00:41:14,180
引用，然后，

634
00:41:14,820 --> 00:41:16,500
接下来，插入一些字符串。

635
00:41:16,700 --> 00:41:17,880
请输入一个字符串。可以是任何内容。

636
00:41:18,080 --> 00:41:18,640
你可以拥有任何你想要的东西。你可以拥有空间。

637
00:41:19,140 --> 00:41:21,080
您可以有空格。您可以在其中有单引号。

638
00:41:21,340 --> 00:41:22,320
在双引号内可以包含单引号。

639
00:41:22,660 --> 00:41:23,580
双引号。

640
00:41:23,720 --> 00:41:25,060
然后，那导致了这个。

641
00:41:25,260 --> 00:41:26,820
谁给了你这个？谁给了你这根绳子？

642
00:41:26,820 --> 00:41:27,940
那为你提供了字符串。好的。

643
00:41:28,500 --> 00:41:31,300
好的。Python 的一个很棒的特性是

644
00:41:31,820 --> 00:41:33,740
Python 的一个很好的特性是它允许你拥有字符串。

645
00:41:33,740 --> 00:41:35,740
它允许您拥有跨多行的字符串。

646
00:41:36,500 --> 00:41:38,160
运行多行。所以，你需要做的是

647
00:41:38,820 --> 00:41:40,860
所以，你需要做的是使用三重引号。

648
00:41:40,860 --> 00:41:43,400
您有一个以三个引号开头和以三个引号结尾的三重引号。

649
00:41:44,740 --> 00:41:46,240
用三重引号开头和结尾。每个人都这样做。

650
00:41:46,420 --> 00:41:46,640
所以，每个人现在都应该这样做。

651
00:41:46,700 --> 00:41:47,700
现在，使用三重引号。

652
00:41:47,900 --> 00:41:51,140
在使用三重引号时，您可以使用单个三重引号。

653
00:41:51,140 --> 00:41:53,100
您可以使用单个三引号或双个三引号。

654
00:41:53,500 --> 00:41:55,040
引用文本时，请使用单引号或双引号。

655
00:41:55,120 --> 00:41:55,700
一旦你完成这个，你就能够

656
00:41:55,700 --> 00:41:56,300
你可以拥有一切。

657
00:41:56,680 --> 00:41:58,240
您可以有多行。

658
00:41:59,060 --> 00:41:59,800
您可以使用多行。好的。

659
00:41:59,800 --> 00:42:00,540
好的。接下来是什么？

660
00:42:00,600 --> 00:42:02,400
然后，它将是一样的。

661
00:42:02,780 --> 00:42:04,260
那将保持不变。那仍会给你同样的。

662
00:42:04,520 --> 00:42:05,880
那仍然给你同样的东西。所以那就是字符串。

663
00:42:06,160 --> 00:42:07,520
那就是字符串。至于字典，

664
00:42:07,760 --> 00:42:09,500
让我们也为字典做点什么。

665
00:42:10,100 --> 00:42:11,160
让我们也为词典做点贡献。

666
00:42:11,580 --> 00:42:13,580
使用花括号表示字典。

667
00:42:15,300 --> 00:42:16,680
字典使用花括号。字典类似于

668
00:42:16,780 --> 00:42:18,000
字典就像是一个工具，你用它来查找单词。

669
00:42:18,320 --> 00:42:18,620
你在查字典吗？

670
00:42:18,740 --> 00:42:19,520
你有它，对吗？

671
00:42:19,600 --> 00:42:20,160
你有，我们说，

672
00:42:20,280 --> 00:42:21,160
让我们考虑越南语。

673
00:42:21,400 --> 00:42:21,780
越南语和中文。

674
00:42:22,080 --> 00:42:22,460
中文。好的。

675
00:42:22,460 --> 00:42:23,140
好的。所以你有它。

676
00:42:23,860 --> 00:42:24,980
所以你的意思是，在越南语中，

677
00:42:25,700 --> 00:42:26,880
在越南语中，有越南字符。

678
00:42:27,320 --> 00:42:28,500
你有越南字符。而对于那个字符，

679
00:42:28,680 --> 00:42:29,520
而且有关于该角色的条目。

680
00:42:29,600 --> 00:42:30,340
这里是入口。入口是中文的。

681
00:42:30,660 --> 00:42:30,820
该条目是中文的。没问题。

682
00:42:30,820 --> 00:42:31,620
好的，让我们继续。

683
00:42:31,820 --> 00:42:33,320
所以现在，你将要拥有一些。

684
00:42:33,440 --> 00:42:33,860
你要有一些，让我们看看。

685
00:42:35,160 --> 00:42:35,700
让我们来看看。

686
00:42:38,080 --> 00:42:40,260
抱歉，我无法输入越南语。

687
00:42:40,380 --> 00:42:41,500
我无法输入越南文，所以我会输入中文。

688
00:42:41,800 --> 00:42:42,320
允许我输入中文。

689
00:42:44,360 --> 00:42:47,200
我正在用中文输入“越南”。

690
00:42:47,580 --> 00:42:48,420
我正在用中文输入“越南”。

691
00:42:48,500 --> 00:42:49,700
然后，我会说，

692
00:42:49,800 --> 00:42:52,140
我会说，这个的翻译是：

693
00:42:52,320 --> 00:42:53,700
這個的翻譯是，讓我們使用英語。

694
00:42:53,920 --> 00:42:54,200
让我们用英语交流。可以吗？

695
00:42:54,420 --> 00:42:54,960
好的。那么，

696
00:42:55,700 --> 00:42:56,400
接下来，你将会有

697
00:42:56,400 --> 00:42:57,960
你必须这样做。

698
00:42:58,440 --> 00:42:59,180
这就是你的做法，你有很多。

699
00:42:59,280 --> 00:43:00,400
你有许多类似这样的条目。

700
00:43:00,900 --> 00:43:03,100
有许多类似的条目。每个条目之间用逗号分隔。

701
00:43:03,860 --> 00:43:04,460
每个条目之间用逗号分隔。好的。

702
00:43:04,520 --> 00:43:04,700
好的。现在，

703
00:43:04,700 --> 00:43:04,920
现在不。

704
00:43:04,920 --> 00:43:05,880
不，这不是这里。

705
00:43:06,200 --> 00:43:08,180
这不是正确的位置。每个条目之间用逗号分隔。

706
00:43:08,180 --> 00:43:08,760
每个条目之间用逗号分隔。

707
00:43:08,880 --> 00:43:09,720
用逗号分隔。而现在，

708
00:43:09,800 --> 00:43:11,180
现在，你可以拥有

709
00:43:12,040 --> 00:43:12,640
例如，你可以有

710
00:43:12,760 --> 00:43:14,320
让我们玩Uno吧。

711
00:43:14,560 --> 00:43:15,900
让我们玩Uno，这是一款西班牙纸牌游戏。

712
00:43:16,320 --> 00:43:19,240
哪一个是西班牙语？我要用它。

713
00:43:19,240 --> 00:43:20,760
我会用一个来做英语。

714
00:43:20,960 --> 00:43:22,440
这是我的词典。

715
00:43:22,720 --> 00:43:24,320
这就是我的词典。那也是。

716
00:43:24,320 --> 00:43:29,340
此外，当我为类分配名称时，这就完成了整个过程。

717
00:43:30,480 --> 00:43:34,230
所以当我参加以名称命名的课程时，就是这样。这是一个学习的要点，无论你之前的表现如何。

718
00:43:34,230 --> 00:43:37,980
学习的一个重要考虑因素是你在大学里表现如何。

719
00:43:38,200 --> 00:43:40,760
无论是在大学还是其他地方，记笔记都非常重要。

720
00:43:42,360 --> 00:43:43,880
做笔记非常重要。但为什么这么重要呢？

721
00:43:44,200 --> 00:43:48,180
为什么重要？做笔记和仅仅听的区别在于你积极参与的程度。

722
00:43:48,180 --> 00:43:52,160
做笔记和仅仅听讲的区别在于积极参与做笔记。

723
00:43:52,160 --> 00:43:56,040
做笔记而不只是拍照，那是不同的。

724
00:43:56,600 --> 00:43:59,410
做笔记不同于仅仅拍照。当你做笔记时，不仅记录了说过的内容，还记录了

725
00:43:59,410 --> 00:44:02,220
与其仅仅拍照，你不仅应记录课堂上所教授的内容，

726
00:44:02,400 --> 00:44:06,700
在课堂上，你不仅学习材料，还要在脑海中加工信息并进行总结。

727
00:44:07,340 --> 00:44:09,500
你也会在脑海中处理所有信息，然后进行总结，因为你无法把每个词都写下来。

728
00:44:10,000 --> 00:44:14,760
因为你无法写下每一个字，你需要积极地在脑海中处理关键信息。

729
00:44:16,140 --> 00:44:21,420
你需要积极地在脑海中处理关键信息。我说的不仅仅是言辞。

730
00:44:21,420 --> 00:44:25,380
我不只是说说而已。我是基于数据科学研究在谈论。

731
00:44:25,780 --> 00:44:28,260
我是基于数据科学研究在谈论。关于这个问题有很多研究。

732
00:44:28,500 --> 00:44:31,680
关于这个话题已经进行了大量研究，比较了积极做笔记的学生和不做笔记的学生的学习成果。

733
00:44:31,680 --> 00:44:34,860
积极做笔记的学生和不做笔记的学生之间的结果有很大的不同。

734
00:44:35,380 --> 00:44:39,370
非常不同。此外，通过键盘输入笔记与手写笔记也是不同的。

735
00:44:39,370 --> 00:44:43,360
通过键盘输入或手写记笔记也很重要。

736
00:44:43,360 --> 00:44:43,780
它也是不同的。

737
00:44:44,280 --> 00:44:47,720
手写在学习中比打字更有效。

738
00:44:48,040 --> 00:44:51,400
手写是一种更有效的学习方式，因为它能激活大脑。

739
00:44:51,400 --> 00:44:53,500
它刺激你的大脑并激活你心灵中的神经元。

740
00:44:53,740 --> 00:44:55,060
它刺激你大脑中的神经元，使其独特。

741
00:44:55,200 --> 00:44:58,320
那是不同的。当你写一个字符时，这并不重要。

742
00:44:58,320 --> 00:45:01,440
当你写字时，你写下的具体字符并不重要。

743
00:45:01,440 --> 00:45:03,120
无论是英文、中文还是越南文。

744
00:45:03,420 --> 00:45:05,720
是英文、中文还是越南文？你需要获取一张图片。

745
00:45:06,100 --> 00:45:12,060
你需要拍照。你大脑的不同部分已经被激活了，好吗？

746
00:45:12,140 --> 00:45:16,270
你的思维，你大脑的不同部分已经被激活了，对吧？不仅仅是在你打字时，只有与位置相关的神经元被激活。

747
00:45:16,270 --> 00:45:20,400
打字时不仅激活了与位置相关的神经元。

748
00:45:20,400 --> 00:45:24,600
该帐户已激活，因为只输入了26个键。

749
00:45:25,220 --> 00:45:28,860
我只输入了26个按键，但当你写作时，才是完整的画面。

750
00:45:29,300 --> 00:45:30,540
然而，当你写作时，它捕捉到整个画面。这是不同的。

751
00:45:32,900 --> 00:45:38,740
那是不同的。然而，当涉及编码时，你不需要使用铅笔来书写。

752
00:45:39,040 --> 00:45:42,010
你不需要用铅笔写代码。打字代码就可以了，因为我们希望每个人都能运行它。

753
00:45:42,010 --> 00:45:44,980
输入代码是可以接受的，因为我们希望每个人都能运行代码。

754
00:45:45,180 --> 00:45:48,000
你编写代码，运行代码，将其写下来；如果它不起作用。

755
00:45:48,180 --> 00:45:48,360
你跑，你把它写下来，它就不会跑了。好的。

756
00:45:48,360 --> 00:45:50,140
好的。那是不同的。

757
00:45:50,400 --> 00:45:54,440
所以那是不同的。然而，对于关键部分，正如我所说，当我问，什么是类？

758
00:45:54,620 --> 00:45:55,640
然而，对于关键部分，正如我所说，当我问到，什么是类？什么是对象？

759
00:45:55,900 --> 00:45:57,740
什么是对象？类和对象之间的关系是什么？

760
00:45:58,080 --> 00:45:59,060
类和对象之间的关系是什么？这是什么？

761
00:46:00,220 --> 00:46:00,480
这是什么？好的。

762
00:46:00,500 --> 00:46:02,280
好的，让我快速核实一下。

763
00:46:03,980 --> 00:46:06,330
让我快速检查一下。有点名和没有点名有什么区别？

764
00:46:06,330 --> 00:46:08,680
有点名和没有点名之间有什么区别？

765
00:46:09,680 --> 00:46:10,480
有什么不同？看这里。

766
00:46:10,580 --> 00:46:13,810
看这里。当我有一个没有点的名字时，在这里我有一个带点的名字，这是什么？

767
00:46:13,810 --> 00:46:17,040
有点和没有点的名字有什么区别？

768
00:46:33,140 --> 00:46:33,580
有什么不同？

769
00:46:33,740 --> 00:46:36,240
好的，让我再看一遍。

770
00:46:36,360 --> 00:46:39,510
让我再看一遍。这就是我刚才说的，因为如果你不记笔记，你就会忘记它。

771
00:46:39,510 --> 00:46:42,660
这就是我刚才说的。如果你不记笔记，你就会忘记，对吧？

772
00:46:42,660 --> 00:46:42,900
立刻

773
00:46:43,900 --> 00:46:45,560
记住，在我离开之前我有这个。

774
00:46:45,640 --> 00:46:46,780
记住，在我拥有这个之前，我曾经拥有过这个。

775
00:46:46,780 --> 00:46:49,160
我有这个。我的名字里有一个点。

776
00:46:49,420 --> 00:46:56,220
我的名字里有一个句号。因此打印输出是一个列表。

777
00:46:56,420 --> 00:46:56,760
所以打印输出是一个列表。

778
00:46:56,800 --> 00:46:57,460
好的，清单已完成。

779
00:46:58,280 --> 00:47:05,580
这就是清单。所以，我这里首先有的是这个项目，这是一个类对象。

780
00:47:06,100 --> 00:47:06,900
所以，我这里有这个类对象。哪一个？

781
00:47:09,780 --> 00:47:11,480
它是哪一个？

782
00:47:11,840 --> 00:47:12,280
这是一个对象。好的。

783
00:47:12,460 --> 00:47:14,180
好的。这是真实的东西。

784
00:47:14,300 --> 00:47:15,060
这是真实的。这是一个物体。

785
00:47:15,720 --> 00:47:20,300
这是一个对象。但正如我所说，在Python中，一切皆为对象。

786
00:47:20,560 --> 00:47:24,040
然而，正如我所说，在Python中，一切皆为对象。如果是一个对象，它将拥有一个蓝图。

787
00:47:24,660 --> 00:47:26,600
物体与蓝图相关联。这个蓝图叫什么？

788
00:47:27,920 --> 00:47:28,820
蓝图叫什么？这是一个类。

789
00:47:29,180 --> 00:47:31,440
这是一个课程。这门课程是关于什么的？

790
00:47:31,660 --> 00:47:37,660
这是什么类？我有点、下划线、下划线、加号。不，这是这个类。

791
00:47:38,400 --> 00:47:42,140
我有点、下划线、下划线、加号，不，这是这个的类。然而，这个东西是另一个对象。

792
00:47:42,360 --> 00:47:45,040
然而，这个项目是一个不同的实体。它不是一串字符，而是一个类。

793
00:47:45,960 --> 00:47:48,720
这不是一个'a'的字符串，而是一个类。因此，这是另一个对象。

794
00:47:49,700 --> 00:47:51,220
所以，这是另一个物品。这会引起困惑吗？

795
00:47:51,540 --> 00:47:52,500
这让人困惑吗？这是一个物体。

796
00:47:53,160 --> 00:47:57,060
这是一个对象。这个对象有一个属性。

797
00:47:57,360 --> 00:47:59,800
该对象具有一个属性。当我们使用一个点后跟着某个内容时，它表示一个属性。

798
00:48:00,710 --> 00:48:02,460
当我们有一个点，代表着一个属性。因此，你的名字就是你的属性。

799
00:48:03,040 --> 00:48:08,020
你的名字是你的标识。你的头发颜色和身高也是标识。

800
00:48:08,460 --> 00:48:12,680
你的头发颜色和身高是你的属性。而这个，这是这个物体的属性。

801
00:48:13,080 --> 00:48:13,220
这是这个对象的属性。好的。

802
00:48:13,220 --> 00:48:17,860
好的。这个属性指的是其他东西。

803
00:48:18,760 --> 00:48:21,940
这个属性指的是其他东西。如果它是另一种东西，那么它就是一个对象。

804
00:48:22,420 --> 00:48:24,760
如果这是另一种东西，那么它是一个对象。记住在Python中，一切都是对象，对吧？

805
00:48:24,840 --> 00:48:26,140
在Python中，请记住一切皆为对象，对吧？因此，这也是一个对象。

806
00:48:26,400 --> 00:48:29,720
这是一个对象。我们使用另一个对象来表示这个类。

807
00:48:31,200 --> 00:48:31,760
我们使用另一个对象来代表这个类别。明白。

808
00:48:31,800 --> 00:48:33,080
好的。大家都明白了吗？

809
00:48:33,720 --> 00:48:34,780
大家明白了吗？这是一个对象。

810
00:48:35,400 --> 00:48:36,640
这是一个对象。一个对象有一个类。

811
00:48:37,260 --> 00:48:40,200
一个对象属于一个类。你如何看待这个类？

812
00:48:40,380 --> 00:48:43,200
你如何看待那个班级？它也被定义为一个班级。

813
00:48:43,220 --> 00:48:43,360
那个类也被定义为一个对象类。

814
00:48:43,820 --> 00:48:44,540
明白了。一切都好。

815
00:48:44,580 --> 00:48:48,480
好的。如果某物是一个对象，那么它就有属性。

816
00:48:49,100 --> 00:48:52,700
如果某物是一个对象，它就有属性。其中一个属性被命名为下划线、下划线、名称。

817
00:48:53,900 --> 00:48:56,320
一个属性被命名为下划线名称。这是你在这里打印出来的内容。

818
00:48:57,740 --> 00:49:02,070
这是您在此处打印的内容。如果您没有此内容，默认情况下，

819
00:49:02,070 --> 00:49:06,400
如果您没有设置，Python 将使用默认设置。

820
00:49:06,400 --> 00:49:12,000
Python 将尝试确定描述此对象的最合适方式。

821
00:49:12,000 --> 00:49:16,420
尝试确定描述这个对象的最合适方式。它包含了一个预定义的方法来获取字符串，因为一旦打印，所有内容都会显示出来。

822
00:49:16,420 --> 00:49:20,840
它有一个内置方法来检索字符串，因为一旦打印，所有内容都需要转换。

823
00:49:20,840 --> 00:49:21,760
转换为字符串

824
00:49:21,920 --> 00:49:23,460
转换为字符串。字符串是一个对象，对吗？

825
00:49:23,660 --> 00:49:25,520
字符串是对象吗？如果是，将所有内容转换为字符串。

826
00:49:25,740 --> 00:49:28,820
将所有内容转换为字符串。因此，这个类现在是一个对象。

827
00:49:29,060 --> 00:49:33,500
所以现在这个类是一个对象。我需要将其转换为字符串，然后打印出来。

828
00:49:33,620 --> 00:49:35,960
我需要将这个转换为字符串，然后打印出来。这就是你需要的。

829
00:49:36,960 --> 00:49:38,400
那就是你所拥有的。因此，这是一个字符串。

830
00:49:38,780 --> 00:49:41,320
这是一个字符串。然而，一旦你拥有了它，那就意味着。

831
00:49:42,000 --> 00:49:46,420
然而，一旦你拥有了那个，它就代表着那个类别的特殊表现，对吧？

832
00:49:46,620 --> 00:49:52,860
这是该类别的特定表示吗？它包括点和内部元素。

833
00:49:53,300 --> 00:49:55,360
这是点和内部内容。这是内部的、内置的内容。

834
00:49:56,220 --> 00:50:00,560
这是内部的、内置的内容。另一个重要元素，另一个关键部分，就是这个。

835
00:50:00,780 --> 00:50:02,280
另一个重要项目，另一个关键组成部分，这是其中的一部分。所以，我有这个清单。

836
00:50:02,830 --> 00:50:04,360
我也有一个清单。我做了同样的事情。

837
00:50:05,210 --> 00:50:06,600
我做了同样的事。我添加了另一个班级。

838
00:50:08,360 --> 00:50:10,360
我正在添加另一个班级。记得在我拥有它时通知我。

839
00:50:10,360 --> 00:50:13,400
我记得我有这个吗？这是列表的特征吗？

840
00:50:15,280 --> 00:50:17,700
这是列表的属性吗？列表的属性是另一个对象。

841
00:50:18,440 --> 00:50:20,760
列表的属性是另一个对象。因此，如果它是一个对象，它就有一个类。

842
00:50:21,180 --> 00:50:23,700
如果某物是一个对象，它属于一个类。那么，这个东西属于什么类？

843
00:50:23,900 --> 00:50:25,240
现在，这个东西属于什么类别？它也有一个类别。

844
00:50:25,980 --> 00:50:27,520
它也属于一个类别。它属于什么类别？

845
00:50:27,780 --> 00:50:29,320
这是什么课程？它叫什么名字？

846
00:50:29,500 --> 00:50:30,660
这个叫什么名字？这是类型。

847
00:50:31,740 --> 00:50:32,300
那就是类型。好的。

848
00:50:32,360 --> 00:50:39,540
好的。当您将类表示为列表时，将类表示为字符串。

849
00:50:39,540 --> 00:50:41,260
当你将类表示为列表、字符串和字典时。

850
00:50:41,700 --> 00:50:44,980
类就像一个字典，所有的东西汇聚在一起成为一个整体。

851
00:50:44,980 --> 00:50:48,260
所有这些元素汇聚在一起，形成一种统一感，就像观察群体时感受到的父母般的凝聚力。

852
00:50:48,580 --> 00:50:50,600
父母可以有儿子和女儿。

853
00:50:50,880 --> 00:50:54,640
父母可以有儿子和女儿。这是因为他们是根据同一蓝图创造的，对吧？

854
00:50:55,040 --> 00:50:57,640
因为这是从同一蓝图生成的，对吧？所以现在父类就是这个类。

855
00:50:57,760 --> 00:50:59,120
现在父类变成了类，被称为类型。

856
00:50:59,500 --> 00:51:01,640
父级被称为类型。它是一种数据类型。

857
00:51:02,260 --> 00:51:05,780
这是一种数据类型。在Python中，有许多不同的数据类型。

858
00:51:05,960 --> 00:51:07,740
Python有许多不同的数据类型，每种数据类型都是一个类。

859
00:51:07,740 --> 00:51:13,440
每种数据类型都是一个类。但是，如果您将所有内容统称为一般类型，则被视为一种类型。

860
00:51:13,600 --> 00:51:14,600
然而，如果你将所有东西都标记为通用的话，它就变成了一种类型。它是一种数据类型。

861
00:51:14,780 --> 00:51:16,440
这是一种数据类型。这就是为什么你有这个。

862
00:51:16,500 --> 00:51:17,420
这就是你拥有这个的原因。这是类型。

863
00:51:17,880 --> 00:51:18,560
这是一种类型。好的。

864
00:51:18,660 --> 00:51:24,220
好的。这部分的关键是一切都是对象。

865
00:51:25,680 --> 00:51:28,400
本部分的关键概念是一切皆为对象。每个对象都有属性。

866
00:51:29,260 --> 00:51:34,100
每个对象都有属性。通过使用点符号来访问对象。

867
00:51:34,360 --> 00:51:35,880
如果你不做某事，你将无法访问该对象的属性。

868
00:51:35,880 --> 00:51:42,860
该属性可以是另一个类的对象。

869
00:51:43,520 --> 00:51:44,080
那个属性可以是另一个类的对象吗？

870
00:51:44,200 --> 00:51:47,920
好的。这是一个对象中的另一个对象。

871
00:51:48,700 --> 00:51:49,560
所以它是一个对象中的对象。明白吗？

872
00:51:49,600 --> 00:51:54,480
你准备好了吗？现在让我们来看一下当前课程的一个例子。

873
00:51:55,820 --> 00:51:56,540
现在，让我们看一个来自课堂的例子。

874
00:51:56,640 --> 00:51:58,320
好的。让我在这里稍作休息。

875
00:51:58,560 --> 00:52:03,680
让我在这里停顿一下。请确认每个人对对象类属性的概念都感到满意。

876
00:52:04,340 --> 00:52:05,680
确保每个人都对对象类属性的概念感到满意。三个重要点。

877
00:52:05,780 --> 00:52:05,860
三个重要的要点。明白。

878
00:52:06,500 --> 00:52:08,360
好的。One是对象类的一个属性。

879
00:52:08,940 --> 00:52:11,440
一个是对象类属性。确保您不要混淆或混淆它们。

880
00:52:13,280 --> 00:52:14,100
确保你不要混淆或混淆。大家都明白吗？

881
00:52:15,240 --> 00:52:15,760
大家都还好吗？有问题吗？

882
00:52:15,980 --> 00:52:16,200
有任何问题吗？是的？

883
00:52:19,740 --> 00:52:20,260
是的？是的。

884
00:52:22,160 --> 00:52:26,340
是的，当我说'parent'时，我是指这里的'class'。

885
00:52:27,420 --> 00:52:30,700
所以，当我提到'parent'时，我是指这个上下文中的'class'。因此，这个属于哪个类？

886
00:52:30,800 --> 00:52:32,460
所以，当你拥有这个时，这个属于什么类？这属于类型的类。

887
00:52:34,360 --> 00:52:34,880
这是类的类型。好的。

888
00:52:34,880 --> 00:52:38,250
好的。如果你已经准备好上课所需的一切，你现在可以去教室了。

889
00:52:38,250 --> 00:52:41,620
如果你在课堂上全力以赴，并努力达到最高水平，你就可以实现一切。

890
00:52:41,620 --> 00:52:45,080
在顶部，有一个名为'object'的单一类。

891
00:52:45,560 --> 00:52:46,620
只有一个名为'object'的类。它只是一个对象。

892
00:52:46,940 --> 00:52:50,960
这只是一个对象。在Python中，这个对象代表着父对象，是一切的祖先。

893
00:52:50,960 --> 00:52:54,980
在Python中，这个对象代表着父对象，所有对象的祖先，因为一切

894
00:52:54,980 --> 00:52:55,720
一切皆为对象。

895
00:52:56,840 --> 00:52:57,160
这是一个物体。好的。

896
00:52:57,300 --> 00:53:01,500
好的。所以你有那个物品，现在我有这个、这个、这个和这个。

897
00:53:01,700 --> 00:53:04,860
你有某物，现在我有这个、这个、这个和这个。所以对我来说，我的目标就是，我反对。

898
00:53:08,220 --> 00:53:08,860
所以对我来说，客体就是我反对。对吧。

899
00:53:09,100 --> 00:53:09,740
好的。当然。

900
00:53:09,940 --> 00:53:10,400
是的，当然。

901
00:53:12,180 --> 00:53:12,820
好的，是的。

902
00:53:12,940 --> 00:53:13,700
是的，它是嵌套的。

903
00:53:13,900 --> 00:53:16,920
它是嵌套的。每个类都可以有一个对象。

904
00:53:17,400 --> 00:53:20,440
每个类都可以拥有一个对象。每个对象必须属于一个类。

905
00:53:21,320 --> 00:53:21,960
每个对象必须属于一个类。

906
00:53:22,800 --> 00:53:26,850
是的。如果你继续向上走类的层次，你会到达顶部，那里是单一的。

907
00:53:26,850 --> 00:53:30,900
如果你参加一系列课程中的最高级课程，它被视为一个单一实体。

908
00:53:31,180 --> 00:53:33,820
那个东西。它简单地被称为'东西'。

909
00:53:34,160 --> 00:53:34,760
这个对象简单地被称为'对象'。就是这样。

910
00:53:34,860 --> 00:53:37,320
就是这样。它不会再继续下去。

911
00:53:37,920 --> 00:53:38,920
它被设计成阻止进一步的进展。

912
00:53:39,040 --> 00:53:41,060
该功能已包含在内。这是Python的内置功能。

913
00:53:41,680 --> 00:53:42,240
该功能已内置于Python中。好的。

914
00:53:42,660 --> 00:53:46,090
好的。在这种情况下，我们的目标是为这个对象进行简要演示。

915
00:53:46,090 --> 00:53:49,520
在这种情况下，我们的目的是为对象和类提供一个简要演示。

916
00:53:49,960 --> 00:53:53,950
和课堂。因此，我们想要做的是，如果你打开笔记本，我认为其中一些

917
00:53:53,950 --> 00:53:57,940
所以我们想要做的是，如果你打开笔记本，我认为一些功能...

918
00:53:57,940 --> 00:54:00,520
我已从函数中删除了代码。

919
00:54:00,740 --> 00:54:02,680
我已经删除了代码，所以你的笔记本会和我的不同。

920
00:54:03,180 --> 00:54:06,900
所以你的笔记本会和我的不同。你的任务是在课后填补缺失的部分。

921
00:54:07,680 --> 00:54:08,500
你的任务是在课后补充缺失的部分。这是你的责任。

922
00:54:08,660 --> 00:54:09,800
这是你的责任。让我们一起复习一下。

923
00:54:10,080 --> 00:54:12,900
让我们来回顾一下。当定义一个类时，只需使用 class 关键字。

924
00:54:13,120 --> 00:54:14,100
当定义一个类时，你只需使用这个类。你看到那个蓝色的了吗？

925
00:54:14,380 --> 00:54:16,200
你看到那个蓝色的了吗？那表示这被称为关键词。

926
00:54:16,760 --> 00:54:18,040
换句话说，这被称为关键字。关键字是保留的。

927
00:54:18,760 --> 00:54:21,360
关键字是保留的，这意味着当您定义一个函数时，您正在定义自己的变量。

928
00:54:21,360 --> 00:54:23,960
定义函数时，应定义自己的变量，避免使用

929
00:54:23,960 --> 00:54:25,500
避免使用相同的物品。

930
00:54:25,780 --> 00:54:29,680
一样的，完全一样的事情。如果你干扰的话，可能会破坏内置功能。

931
00:54:30,120 --> 00:54:32,220
如果你干扰了，可能会破坏内置功能。此功能专为Python保留。

932
00:54:32,220 --> 00:54:32,420
这是为Python保留的。好的。

933
00:54:32,560 --> 00:54:40,940
好的。避免将'class'用作函数名或变量名。

934
00:54:41,220 --> 00:54:41,740
不要将'class'用作函数名或变量名。

935
00:54:41,860 --> 00:54:45,060
好的。我现在有一个类的定义，它被称为一个

936
00:54:45,060 --> 00:54:48,260
我现在有一个关于这个类的定义，它被称为信用卡。

937
00:54:49,320 --> 00:54:50,560
我现在有信用卡。而且，我已经制定好了计划。

938
00:54:51,100 --> 00:54:54,660
现在我有一个蓝图。我们假设这是美国银行。

939
00:54:55,060 --> 00:54:55,580
假设这是美国银行。好的。

940
00:54:55,640 --> 00:54:58,640
好的。我将申请一张美国银行的信用卡。

941
00:54:58,760 --> 00:55:01,220
我打算申请一张美国银行的信用卡。然后是这个项目。

942
00:55:02,220 --> 00:55:04,980
然后这个东西。它总是有一个功能。

943
00:55:05,240 --> 00:55:10,400
它总是有一个功能。这是函数的定义。

944
00:55:10,960 --> 00:55:13,460
这是函数的定义。'DEF'代表函数的定义。这是函数名称。

945
00:55:14,090 --> 00:55:16,520
这是一个名为'function name'的函数。为什么里面有下划线？

946
00:55:16,820 --> 00:55:20,150
为什么我的文本中有下划线？每当你使用下划线时，意味着你想隐藏这部分内容。

947
00:55:20,150 --> 00:55:23,480
每当您使用两个下划线时，表示您想要隐藏此项

948
00:55:23,480 --> 00:55:23,880
用户输入。

949
00:55:24,660 --> 00:55:25,200
用户。好的。

950
00:55:25,260 --> 00:55:26,040
好的。你想要隐藏这个。

951
00:55:26,920 --> 00:55:31,600
你想要隐藏这个。隐藏这个的唯一优点就是，就说吧。

952
00:55:31,600 --> 00:55:34,040
隐藏这个的唯一优点是只有高级用户才能篡改它。

953
00:55:34,460 --> 00:55:37,220
只有高级用户才能干预这个。如果你不理解，请不要尝试。

954
00:55:37,360 --> 00:55:38,440
除非你理解，否则不要尝试。那就是目的。

955
00:55:38,720 --> 00:55:41,280
这就是预期的目的，以便常规用户看不到。

956
00:55:41,360 --> 00:55:43,560
这个功能对普通用户隐藏，以防止任何潜在问题。

957
00:55:44,240 --> 00:55:51,680
他们将无法干扰这个。而为什么这个对于这个特定功能很重要。

958
00:55:52,740 --> 00:55:55,790
然后，为什么这对于这个特定的功能很重要？每当您创建一个新的实例时，将调用此函数。

959
00:55:55,790 --> 00:55:58,840
每次创建新对象时，将调用此函数。

960
00:56:00,100 --> 00:56:02,240
我们稍后会检查这个对象。

961
00:56:02,520 --> 00:56:06,720
我们稍后会处理这个。它还有一个初始参数。

962
00:56:07,060 --> 00:56:12,600
接着，它有一个主要参数。在函数调用中，通常会有多个不同的参数。

963
00:56:13,060 --> 00:56:18,040
在函数调用中，您可能有各种不同的参数，但如果没有任何参数也是可以的。

964
00:56:18,340 --> 00:56:22,280
然而，如果您没有任何参数，也是可以的。在这种情况下，您可以创建一个空的函数，就像这样。

965
00:56:23,560 --> 00:56:24,580
您可以创建一个像这样为空的函数。这是可以接受的。

966
00:56:24,680 --> 00:56:25,540
那没问题。用Python。

967
00:56:27,560 --> 00:56:28,260
使用Python。使用Python。

968
00:56:28,260 --> 00:56:28,820
使用Python。使用Python。

969
00:56:28,820 --> 00:56:30,740
在Python中，语法是正确的。

970
00:56:31,780 --> 00:56:33,280
在Python语法中是可以的，不会产生任何错误。

971
00:56:33,660 --> 00:56:37,940
不会产生错误。然而，对于类内部的这个特定函数'init'，是必需的。

972
00:56:37,940 --> 00:56:42,220
然而，对于类内部的这个特定函数'init'，需要有

973
00:56:42,220 --> 00:56:48,620
您有一个保留为对对象本身的引用的第一个参数。

974
00:56:48,920 --> 00:56:52,440
第一个参数被保留为对对象本身的引用。因此，通常您会称其为'它'或'它自身'。

975
00:56:52,900 --> 00:56:53,500
所以，通常情况下，你需要拥有，你可以说，称之为，自力更生。好的。

976
00:56:53,540 --> 00:56:56,640
好的。这意味着这是一份蓝图。

977
00:56:56,840 --> 00:56:57,080
这意味着这是一个蓝图。好的。

978
00:56:57,080 --> 00:56:57,840
好的。这是蓝图。

979
00:56:58,060 --> 00:57:04,400
这是一个蓝图。一旦打印出来，可以用来制作一张新的信用卡，代表着一个具体的现实。

980
00:57:04,400 --> 00:57:10,740
打印一张新的信用卡象征着自我创造的具体现实。

981
00:57:11,360 --> 00:57:12,000
自我是一切。好的。

982
00:57:12,240 --> 00:57:15,600
好的。这份蓝图并非真正的产品。

983
00:57:16,060 --> 00:57:20,020
由于这个蓝图不是真实的物品，您可以将其他组件插入到您的功能中。

984
00:57:20,700 --> 00:57:21,500
您还可以包含其他内容来在您的函数中使用。好的。

985
00:57:21,820 --> 00:57:25,640
好的。大家对函数的概念都可以接受吗？

986
00:57:25,820 --> 00:57:27,060
那么，大家对函数的概念都可以接受吗？函数保持不变。

987
00:57:27,060 --> 00:57:30,220
这个函数与你在代数中学到的函数相同。

988
00:57:30,780 --> 00:57:30,880
这个函数的运作方式与你在代数中学到的一样。好的。

989
00:57:31,220 --> 00:57:32,620
好的。你有一个函数。

990
00:57:32,800 --> 00:57:34,180
所以你有一个函数。你有一些输入。

991
00:57:34,480 --> 00:57:36,060
您提供一些输入。接着，进行一些计算。

992
00:57:36,420 --> 00:57:38,420
接着，你进行一些计算。你会输出一些东西，对吧？

993
00:57:48,100 --> 00:57:52,660
你输出了一些内容，对吧？在初始化的情况下，这是一个保留值。

994
00:57:52,920 --> 00:57:55,200
在初始化的情况下，'self' 是一个保留参数，始终是第一个参数。

995
00:57:55,200 --> 00:57:57,980
第一个参数始终为'self'，然后是其他参数。

996
00:57:58,280 --> 00:58:02,460
接下来，还有其他事项需要考虑。在这里，我会指定这将是名称，这将是一个字符串。

997
00:58:02,460 --> 00:58:06,640
在这里，我会说这将是客户的姓名，这将是一个字符串。

998
00:58:06,980 --> 00:58:09,020
我会帮助顾客，然后联系银行。

999
00:58:09,280 --> 00:58:09,620
接下来，我会提到银行。好的。

1000
00:58:09,680 --> 00:58:13,080
在美国银行的情况下，名称就是美国银行。

1001
00:58:13,340 --> 00:58:18,320
谈到美国银行，它只是一个名字叫做“美国银行”。想想你的信用卡上印着的内容——你的名字和你的银行，对吧？

1002
00:58:18,420 --> 00:58:22,880
你记得信用卡上印着的信息吗，比如你的姓名和银行？还有16位数字的账号吗？

1003
00:58:23,000 --> 00:58:23,160
接下来，请提供16位数字的账号。

1004
00:58:23,160 --> 00:58:26,780
好的。另一件事需要注意的是，每张信用卡都有一个额度。

1005
00:58:26,780 --> 00:58:30,400
另一个重要的要点是，每张信用卡都有信用额度。

1006
00:58:30,720 --> 00:58:33,400
信用额度：您不得超过限额。

1007
00:58:33,620 --> 00:58:36,140
您不能超过限额。我们说$2,000，好吗？

1008
00:58:36,240 --> 00:58:40,180
我们就定在$2,000吧，好吗？这就是你最初申请信用卡的原因。

1009
00:58:40,340 --> 00:58:41,460
这就是你最初创建信用卡的原因。你想要拥有它。

1010
00:58:41,780 --> 00:58:43,560
你有一个愿望。这里提供的是信息。

1011
00:58:43,680 --> 00:58:48,620
这就是这里的信息。现在让我们忘记到期日期和密码。

1012
00:58:48,760 --> 00:58:50,000
现在让我们忘记到期日期和PIN码。让我们现在简化这个。

1013
00:58:50,180 --> 00:58:50,760
让我们现在简化这个。有问题吗？

1014
00:58:57,040 --> 00:58:57,560
有任何问题吗？是的。

1015
00:58:58,800 --> 00:59:02,260
是的，函数的名称用于标识函数。

1016
00:59:03,160 --> 00:59:03,680
为了确定功能，这就是函数的名称。是的。

1017
00:59:03,800 --> 00:59:09,840
是的。但是，当您调用此函数时，不需要调用下划线、下划线、init。

1018
00:59:10,860 --> 00:59:13,780
然而，当您调用此函数时，不需要调用下划线、下划线、init。我们将在稍后展示您如何调用此函数。

1019
00:59:13,940 --> 00:59:14,240
我们将确定您如何稍后调用此函数。好的。

1020
00:59:14,400 --> 00:59:16,320
好的。这是因为这是一个特殊功能。

1021
00:59:16,540 --> 00:59:17,560
这是因为这是一个特殊功能，会自动调用。

1022
00:59:18,040 --> 00:59:19,360
它会自动调用。你不需要调用它。

1023
00:59:20,000 --> 00:59:21,480
你不需要调用它。Python会为你处理。

1024
00:59:22,300 --> 00:59:22,860
Python 会为您调用它。正确。

1025
00:59:22,900 --> 00:59:23,440
好的。自动地。

1026
00:59:23,700 --> 00:59:24,240
自动。是的。

1027
00:59:24,380 --> 00:59:27,830
是的。所以，现在你已经有了这个，你需要做的是，因为你正在创建一个新的

1028
00:59:27,830 --> 00:59:31,280
所以，现在你已经有了这个，你需要做的是，因为你正在创建一张新的信用卡，

1029
00:59:31,540 --> 00:59:33,560
那张信用卡是真的。

1030
00:59:33,660 --> 00:59:34,360
那张信用卡是真的。这是一个蓝图。

1031
00:59:34,900 --> 00:59:38,340
这是一个蓝图。实际对象有一个称为self的引用。

1032
00:59:40,060 --> 00:59:46,500
某物的真正本质是通过对自身的引用来定义的。在这种情况下，名称代表信用卡的一个属性。

1033
00:59:47,180 --> 00:59:47,740
在这种情况下，姓名被视为信用卡的属性。

1034
00:59:47,740 --> 00:59:51,820
银行与信用卡相关联。

1035
00:59:51,960 --> 00:59:53,260
银行与信用卡相关联。账号是一个特征。

1036
00:59:53,620 --> 00:59:58,240
账号是一个唯一标识符。因此，您需要指定客户的姓名、银行、账户和限额。

1037
00:59:58,240 --> 01:00:02,860
所以，您需要做的是定义客户的姓名、银行、账户、限额和余额。

1038
01:00:02,940 --> 01:00:04,440
平衡是关键的一切方面。

1039
01:00:06,280 --> 01:00:07,200
一切被视为附着在自我的属性。

1040
01:00:07,360 --> 01:00:10,580
忠于自己。记住，你才是真正的财富。

1041
01:00:10,660 --> 01:00:15,560
记住，真正的信用卡就是你自己。一旦你建立了真正的信用卡，它就被称为你自己。

1042
01:00:16,440 --> 01:00:17,720
一旦您创建了真实的信用卡，它被称为自身。因此，这就是真实的信用卡。

1043
01:00:18,640 --> 01:00:23,300
所以，这是实际的信用卡。当我使用下划线时，表示这是内部事项。

1044
01:00:23,400 --> 01:00:26,860
当我使用下划线时，表示这是内部项目。我不希望客户自行修改。

1045
01:00:27,460 --> 01:00:30,350
我不希望我的客户自行修改。如果您真的拥有信用卡，您的银行不允许用户进行修改。

1046
01:00:30,350 --> 01:00:33,240
如果您真的有信用卡，您的银行不允许用户更改姓名。

1047
01:00:34,120 --> 01:00:35,220
姓名或账号。

1048
01:00:35,440 --> 01:00:36,540
没有账号，你不能这样做。

1049
01:00:36,720 --> 01:00:37,320
你无法做到。没关系。

1050
01:00:37,630 --> 01:00:41,640
好的。我们使用下划线来表示这个动作。

1051
01:00:41,920 --> 01:00:42,440
因此，我们使用下划线来表示这个动作。好的。

1052
01:00:43,540 --> 01:00:44,080
好的。是的。

1053
01:00:44,140 --> 01:00:44,760
是的，你隐藏了这个。

1054
01:00:45,680 --> 01:00:46,460
你隐藏这个。然后。

1055
01:00:46,460 --> 01:00:49,680
然后，但最初，您的余额为零。

1056
01:00:49,960 --> 01:00:50,960
然而，在开始时，您的余额为零。这就是情况。

1057
01:00:51,180 --> 01:00:58,360
所以，就是这样。接下来，你需要做的是让我暂时忽略剩下的部分。

1058
01:00:58,620 --> 01:00:59,360
接下来，请忽略剩余部分并运行此代码。

1059
01:00:59,560 --> 01:01:03,220
请执行此命令。现在，各位，如果您已经打开笔记本，请运行此代码单元。

1060
01:01:03,760 --> 01:01:04,700
现在，每个人，如果你已经打开笔记本，请运行这个单元格。运行这个单元格。

1061
01:01:04,880 --> 01:01:10,420
执行此单元格。之后，完成此步骤后，您可以执行相同操作。

1062
01:01:10,620 --> 01:01:13,580
在获得这些信息之后，您可以继续下一步，即创建一个新对象。

1063
01:01:14,020 --> 01:01:15,500
您创建了一个新对象。

1064
01:01:16,460 --> 01:01:16,700
这是一个新对象。没问题。

1065
01:01:16,700 --> 01:01:17,280
好的。这是名字。

1066
01:01:17,420 --> 01:01:17,600
这是名字。

1067
01:01:17,700 --> 01:01:19,300
好的。课程名称是信用卡。

1068
01:01:19,400 --> 01:01:19,520
类名是'信用卡'，对吗？

1069
01:01:19,800 --> 01:01:25,100
正确吗？指定类名，并像调用函数一样处理。

1070
01:01:25,460 --> 01:01:30,920
将一个名称赋给类，类似于调用函数。将此名称用作参数，称为名称库。

1071
01:01:31,180 --> 01:01:31,660
将此作为参数，名为bank。让我们看看。

1072
01:01:32,100 --> 01:01:34,400
让我们看看。美国银行。

1073
01:01:35,580 --> 01:01:37,760
美国银行。接下来，让我们看看。

1074
01:01:38,580 --> 01:01:41,420
接着，让我们看一下。你应该有16个数字。

1075
01:01:41,720 --> 01:01:43,600
您应该有16个数字。然后，您设置限制。

1076
01:01:43,860 --> 01:01:44,280
然后，你设定了限制。就这样。

1077
01:01:44,280 --> 01:01:49,020
所以，一旦你完成了那个，你就可以打印出CC。

1078
01:01:51,220 --> 01:01:53,120
一旦你完成了这个步骤，你可以打印出CC的值。这个过程被称为赋值。

1079
01:01:54,000 --> 01:01:55,480
所以，这被称为赋值。我们不说'等于'。

1080
01:01:55,780 --> 01:02:00,280
我们不使用“相等”的术语。使用这个术语可能会导致理解上的错误。

1081
01:02:02,100 --> 01:02:08,200
使用“等于”可能会导致理解上的错误。一些学生在将值分配给右侧时感到困惑。

1082
01:02:08,540 --> 01:02:13,980
一些学生在将值分配到右侧时感到困惑。当你说分配时，意味着左侧有东西。

1083
01:02:13,980 --> 01:02:19,060
当你使用'assign'这个词时，意味着左侧有某物。它暗示着将右侧的内容转移到左侧。

1084
01:02:19,340 --> 01:02:19,720
我想把右边的东西移到我的左边。好的。

1085
01:02:19,940 --> 01:02:23,260
好的。记得要从右到左阅读。

1086
01:02:23,800 --> 01:02:27,900
始终从右向左阅读。因此，这意味着调用此函数。

1087
01:02:28,340 --> 01:02:30,160
因此，这意味着调用这个函数，在这种情况下，它是一个类。

1088
01:02:30,340 --> 01:02:31,180
在这种情况下，这是一个类，而不是一个函数。

1089
01:02:31,720 --> 01:02:34,020
这不是一个函数。调用该类来创建一个对象。

1090
01:02:35,540 --> 01:02:36,720
调用这个类来创建一个对象。现在你有了这个对象。

1091
01:02:37,360 --> 01:02:38,280
现在你有一个物体。这是真实的。

1092
01:02:39,040 --> 01:02:41,300
这是真实的。这是一张真实的信用卡。

1093
01:02:41,620 --> 01:02:42,620
这是一张真实的信用卡。它有一个名字。

1094
01:02:42,620 --> 01:02:43,860
它有一个名字。它有一个限制。

1095
01:02:44,200 --> 01:02:45,960
它有限制。它有帐号。

1096
01:02:46,560 --> 01:02:48,840
它有一个账号。然后，将其分配给信用卡。

1097
01:02:49,760 --> 01:02:53,060
接下来，将其分配给CC。因此，当您打印CC时，它将显示为这个。

1098
01:02:53,200 --> 01:02:55,920
所以，当您打印出这个CC时，它是您主程序的一部分。

1099
01:02:56,140 --> 01:02:59,480
它位于主函数内，这是您的程序。主函数是整个程序的入口点。

1100
01:02:59,720 --> 01:03:05,500
整个程序的对象称为主程序。在主程序内部，有一张信用卡存储在这个内存位置。

1101
01:03:06,360 --> 01:03:07,900
在主函数内部，有一张信用卡存储在这个内存位置，即某个特定的内存地址。

1102
01:03:08,920 --> 01:03:10,680
Python 知道如何访问特定的内存位置。

1103
01:03:10,820 --> 01:03:12,480
Python 知道路。你不需要知道。

1104
01:03:12,480 --> 01:03:13,160
你不需要知道那个。好的。

1105
01:03:13,280 --> 01:03:15,840
好的。它只是存储在你记忆中的一段回忆。

1106
01:03:16,420 --> 01:03:19,940
这只是你记忆中的一部分。所以，当我关闭电脑时，让我们来看看这个。

1107
01:03:20,300 --> 01:03:24,300
所以，当我关闭电脑时，让我们看看会发生什么。如果你点击这里关闭它，那么它就会消失。

1108
01:03:24,680 --> 01:03:25,580
如果你来这里并关闭它，那么它将消失。一切都将消失。

1109
01:03:25,720 --> 01:03:27,920
一切都消失了。而且因为它存在于记忆中，所以它消失了。

1110
01:03:28,080 --> 01:03:29,440
由于这些信息存储在内存中并已被删除，您无法再访问它。

1111
01:03:29,740 --> 01:03:32,340
除非您将其保存到磁盘，否则您无法访问它。

1112
01:03:33,580 --> 01:03:35,580
除非你把这个保存在磁盘上。哦，还有一件事。

1113
01:03:35,800 --> 01:03:37,300
哦，还有一件事。请过来这边。

1114
01:03:37,500 --> 01:03:37,980
来这里。运行时间。

1115
01:03:38,680 --> 01:03:41,380
运行时允许您中断。

1116
01:03:41,380 --> 01:03:45,040
运行时允许您暂停和断开连接。

1117
01:03:46,320 --> 01:03:48,900
它让你可以断开连接。那么，为什么你选择断开连接呢？

1118
01:03:49,240 --> 01:03:53,700
那么，为什么要断开连接呢？当你使用完这本笔记本时，只需将其断开连接。

1119
01:03:53,940 --> 01:04:02,600
当您使用完这本笔记本时，请断开连接。原因是每个人在使用谷歌的免费笔记本时有限制的时间。

1120
01:04:03,340 --> 01:04:06,940
原因是每个人在谷歌免费笔记本上使用的时间有限。一旦你今天用完了，就不能再使用了。

1121
01:04:08,680 --> 01:04:10,460
如果您今天用完了配额，那么您将无法再使用。明天，您将获得新的配额。

1122
01:04:10,460 --> 01:04:11,000
明天，你将有另一个机会。让我们拭目以待。

1123
01:04:11,120 --> 01:04:11,860
让我们来看看。需要三个小时。

1124
01:04:12,040 --> 01:04:13,420
三小时。每个人每天都有三个小时。

1125
01:04:13,760 --> 01:04:16,840
每个人每天都有三个小时。因此，一旦完成，只需关闭它。

1126
01:04:17,020 --> 01:04:17,720
如果你完成了，只需关闭它，不要使用。

1127
01:04:18,260 --> 01:04:19,400
不要使用。让它运行。

1128
01:04:21,600 --> 01:04:23,780
让它运行。用完你的配额。

1129
01:04:24,060 --> 01:04:25,540
用完你的配额。不要让它用尽。

1130
01:04:25,860 --> 01:04:30,100
不要让它运行。如果你关闭这个标签，它也会关闭。

1131
01:04:30,700 --> 01:04:31,300
如果你关闭这个标签，它也会关闭。好的。

1132
01:04:32,060 --> 01:04:34,220
好的。但是这将需要一些时间。

1133
01:04:34,260 --> 01:04:35,140
然而，这将需要一些时间。不会立刻。

1134
01:04:35,680 --> 01:04:39,020
不是立即。这就是你创建对象的方式。

1135
01:04:39,360 --> 01:04:40,440
这就是你创建对象的方式。就像我之前说的。

1136
01:04:40,440 --> 01:04:41,820
正如我所说，一切皆为对象。

1137
01:04:42,100 --> 01:04:47,160
一切皆为对象。当你提到'对象'时，它指的是一切事物的顶级对象。

1138
01:04:47,760 --> 01:04:50,560
如果您键入'object'，那指的是顶层对象。这是一个内部对象。

1139
01:04:50,940 --> 01:04:51,580
这是一个内部对象。好的。

1140
01:04:51,680 --> 01:04:55,120
好的。接下来，我们将把某物定义为一个函数。

1141
01:04:55,280 --> 01:04:56,400
接下来，我们将某物定义为一个函数。现在，我正在定义一个函数。

1142
01:04:56,580 --> 01:04:59,380
现在，我正在定义一个函数。在类中，这个函数被称为方法。

1143
01:05:00,100 --> 01:05:01,640
为什么在类中这个函数被称为方法？

1144
01:05:01,820 --> 01:05:03,400
为什么它被称为方法？这就是原因。

1145
01:05:03,600 --> 01:05:04,720
就是这样。你有一个物体。

1146
01:05:05,300 --> 01:05:07,020
你有一个对象。现在，这些是方法。

1147
01:05:07,520 --> 01:05:09,700
现在，这些是方法。一旦你按下它。

1148
01:05:09,700 --> 01:05:11,180
当你推动时，会发生某种动作。

1149
01:05:11,700 --> 01:05:12,340
发生了一些事件。好的。

1150
01:05:12,360 --> 01:05:13,280
好的，所以那还是一样的。

1151
01:05:13,760 --> 01:05:15,580
所以，当我按下这个按钮时，情况是一样的。

1152
01:05:16,100 --> 01:05:18,700
当我按下这个按钮时，将会发生一些事情。

1153
01:05:18,900 --> 01:05:23,100
即将发生一些事情。因此，在这种情况下，我打算做的是按下这个按钮。

1154
01:05:23,240 --> 01:05:26,020
所以，在这种情况下，我想要做的是当我按下这个按钮时检索客户的姓名。

1155
01:05:27,200 --> 01:05:31,100
我想要的是提供顾客的姓名。因此，点下划线顾客提供了顾客的姓名。

1156
01:05:31,300 --> 01:05:32,840
顾客提供了顾客的姓名，这就是您应该返回的内容。

1157
01:05:33,120 --> 01:05:35,380
所以，那就是你返回的东西。这就是你调用函数的原因。

1158
01:05:35,480 --> 01:05:36,000
这就是你调用函数的原因。它会返回一个值。

1159
01:05:37,600 --> 01:05:39,400
它会回来。有一件事我之前没提到。

1160
01:05:39,400 --> 01:05:41,560
我之前没有提到的一件事是这个。

1161
01:05:41,960 --> 01:05:45,840
这是我之前提到的例子。

1162
01:05:46,300 --> 01:05:48,100
这在内部被称为我提到的。这个调用是什么时候发生的？

1163
01:05:48,380 --> 01:05:51,240
这通电话是什么时候？请查看是否有这个号码。

1164
01:05:52,140 --> 01:05:55,720
检查是否有这行：类名后面跟着括号。

1165
01:05:57,240 --> 01:06:01,140
类名后跟着括号。这将调用下划线，下划线 init 函数。

1166
01:06:01,940 --> 01:06:03,400
它将调用下划线初始化函数。它将调用这个函数。

1167
01:06:04,000 --> 01:06:06,300
当调用此函数时，将会调用该函数。

1168
01:06:07,040 --> 01:06:09,180
当这个函数被调用时，首先要做的是创建。

1169
01:06:09,400 --> 01:06:10,520
第一件事是创建一个对象。

1170
01:06:11,220 --> 01:06:13,280
这是一个对象。将其分配给self。

1171
01:06:14,440 --> 01:06:15,420
将其分配给self。然后。

1172
01:06:16,340 --> 01:06:20,400
这是您在创建此时需要设置的第一个参数。

1173
01:06:20,500 --> 01:06:21,900
这是在创建过程中使用的初始参数。将其称为第一个参数。

1174
01:06:22,240 --> 01:06:23,320
看，第一个参数：约翰·多伊。

1175
01:06:23,960 --> 01:06:25,180
约翰·多伊。这不是自己。

1176
01:06:26,120 --> 01:06:30,000
这不是自我。它被定义为第二。

1177
01:06:30,660 --> 01:06:31,380
这个项目被定义为第二。好的。

1178
01:06:31,440 --> 01:06:33,860
好的。让我再次强调这一点。

1179
01:06:34,380 --> 01:06:36,020
让我再强调一遍。当你调用一个函数时。

1180
01:06:37,440 --> 01:06:38,620
当你调用一个函数时会发生什么？

1181
01:06:46,360 --> 01:06:48,500
当你调用一个函数时会发生什么？

1182
01:06:48,680 --> 01:06:51,960
因此，当您调用一个函数时，您必须拥有一个类。

1183
01:06:52,340 --> 01:06:52,620
你有一节课。好的。

1184
01:06:52,680 --> 01:06:53,340
好的。你有一节课。

1185
01:06:53,440 --> 01:06:54,220
你有一个类，这是一个蓝图。

1186
01:06:55,340 --> 01:06:56,400
哪一个是蓝图？在课堂里。

1187
01:06:56,940 --> 01:06:59,220
在教室里。你有这个功能。

1188
01:07:01,500 --> 01:07:02,900
你拥有这个功能。这是一个特殊的功能。

1189
01:07:04,640 --> 01:07:05,480
那是一个独特的功能。现在。

1190
01:07:06,140 --> 01:07:07,600
现在，这是一张信用卡。

1191
01:07:07,600 --> 01:07:08,740
这是一张信用卡。

1192
01:07:13,620 --> 01:07:14,380
信用卡福利。

1193
01:07:16,080 --> 01:07:17,580
此外。我现在将称之为这样。

1194
01:07:20,080 --> 01:07:21,260
现在我会称之为信用卡。

1195
01:07:27,500 --> 01:07:29,100
信用卡。我正在调用这个函数。

1196
01:07:29,780 --> 01:07:30,540
我正在调用这个函数。

1197
01:07:31,440 --> 01:07:33,460
让我们检查客户的姓名。

1198
01:07:34,040 --> 01:07:36,420
让我们查看客户的姓名和银行账户限额。

1199
01:07:36,820 --> 01:07:37,580
还有银行账户限制。好的。

1200
01:07:37,580 --> 01:07:39,100
好的。当我发起这个调用时。

1201
01:07:39,260 --> 01:07:42,140
当我进行这个电话时。当我申请新信用卡时。

1202
01:07:42,280 --> 01:07:42,760
当我申请一张新信用卡。

1203
01:07:42,980 --> 01:07:43,640
明白了。好的。

1204
01:07:43,740 --> 01:07:45,500
好的。发生的是。

1205
01:07:46,000 --> 01:07:47,820
接下来发生的是Python处理这些信息。

1206
01:07:49,020 --> 01:07:50,200
Python看到这个后，请看这一行。

1207
01:07:51,260 --> 01:07:54,840
看这一行。它将首先解释这个引用。

1208
01:07:56,860 --> 01:07:57,560
首先，让我们回顾一下这个类的参考。

1209
01:07:58,720 --> 01:08:01,240
参加课堂并发现这是什么。

1210
01:08:02,700 --> 01:08:03,700
找出这是什么。然后继续。

1211
01:08:04,300 --> 01:08:06,380
接着，生成一个实际的对象。

1212
01:08:06,660 --> 01:08:07,560
制造一个有形物品。让我们来看看这个实物。

1213
01:08:07,560 --> 01:08:08,520
让我们看看实际的物体。这是吗？

1214
01:08:09,260 --> 01:08:10,220
这是信用卡吗？

1215
01:08:10,940 --> 01:08:11,500
信用卡，好的。

1216
01:08:11,900 --> 01:08:13,180
好的。让我们申请一张信用卡。

1217
01:08:13,420 --> 01:08:14,500
申请信用卡。这是一张真正的信用卡。

1218
01:08:15,020 --> 01:08:15,760
那是一张真正的信用卡。但是，目前只是暂时的。

1219
01:08:15,900 --> 01:08:16,820
然而，此刻它没有名字。

1220
01:08:16,980 --> 01:08:18,480
它没有名字。它还没有帐号。

1221
01:08:18,940 --> 01:08:20,020
尚未分配帐号。这是塑料卡。

1222
01:08:21,100 --> 01:08:21,660
它是由塑料制成的。现在。

1223
01:08:22,160 --> 01:08:23,440
现在过来这边。

1224
01:08:23,760 --> 01:08:24,960
过来这边，放置这个物品。

1225
01:08:27,180 --> 01:08:28,200
把这个东西放在自己身上。

1226
01:08:29,720 --> 01:08:30,980
做真实的自己。这是第一步。

1227
01:08:32,100 --> 01:08:32,900
这是第一步。创造它。

1228
01:08:33,560 --> 01:08:34,120
创造它。

1229
01:08:35,220 --> 01:08:36,720
将此视为自身。

1230
01:08:37,400 --> 01:08:38,320
将这个视为自己。然后。

1231
01:08:38,800 --> 01:08:40,460
现在，您可以调用这个函数。

1232
01:08:41,460 --> 01:08:43,280
您现在正在调用此函数。下一步是再次调用此函数。

1233
01:08:44,160 --> 01:08:45,920
下一步是调用这个函数，因为这个函数提供了指导。

1234
01:08:46,320 --> 01:08:48,280
这个函数指定第一个参数为'self'。

1235
01:08:49,140 --> 01:08:50,740
第一个参数是'self'，因此您必须包括它。

1236
01:08:51,540 --> 01:08:53,460
所以，你必须拥有一种叫做自我的东西。

1237
01:08:54,060 --> 01:08:54,660
有一种叫做自我。首先。

1238
01:08:54,820 --> 01:08:56,340
首先，您调用此函数。

1239
01:08:57,400 --> 01:08:58,000
接下来，您将调用此函数。

1240
01:08:58,100 --> 01:09:01,700
所以，此刻的自我只是空白的塑料材料。

1241
01:09:02,820 --> 01:09:04,380
此刻的自我是空白的塑料材料。而你放置这个。

1242
01:09:04,520 --> 01:09:05,880
你把这个放在这里。自己放在这里。

1243
01:09:05,880 --> 01:09:08,040
将它放在这里。然后，您可以添加其他物品。

1244
01:09:08,160 --> 01:09:09,160
然后您可以添加其他项目，除了名称。

1245
01:09:09,160 --> 01:09:10,040
除了姓名外，请提供账号。

1246
01:09:10,180 --> 01:09:10,360
账号和银行信息。

1247
01:09:10,740 --> 01:09:11,340
银行账号。

1248
01:09:11,420 --> 01:09:11,700
账号和限额。

1249
01:09:11,860 --> 01:09:13,500
设定一个限制。一旦你设立了它。

1250
01:09:13,680 --> 01:09:15,100
一旦你掌握了那个，它将使用句号。

1251
01:09:15,240 --> 01:09:15,880
它将使用点。某物会有一个点。

1252
01:09:15,960 --> 01:09:16,480
有事情发生。有事情发生。

1253
01:09:16,560 --> 01:09:16,800
有些东西不见了。有些东西在那里。

1254
01:09:17,460 --> 01:09:19,020
要附着在某物上。

1255
01:09:19,100 --> 01:09:19,300
附着在那个上面。

1256
01:09:19,300 --> 01:09:20,220
那个。那个意味着这个。

1257
01:09:20,520 --> 01:09:21,080
这意味着以下。创造。

1258
01:09:21,420 --> 01:09:21,980
创造。创新。

1259
01:09:22,620 --> 01:09:22,900
创造一些东西。

1260
01:09:22,960 --> 01:09:23,940
您的信用卡账单上出现了一笔交易。

1261
01:09:24,840 --> 01:09:26,700
在您的信用卡上。这就是整个想法。

1262
01:09:27,040 --> 01:09:28,020
这就是类和对象的基本概念。

1263
01:09:28,580 --> 01:09:30,040
类和对象。现在只需记住它。

1264
01:09:30,340 --> 01:09:30,880
现在就记住。好的。

1265
01:09:31,820 --> 01:09:32,700
好的。这个东西。

1266
01:09:33,520 --> 01:09:34,460
这是蓝图。

1267
01:09:35,200 --> 01:09:36,280
这就是蓝图。这个东西。

1268
01:09:36,660 --> 01:09:39,240
在调用初始化函数之后，这将发生。

1269
01:09:39,540 --> 01:09:41,620
在调用初始化函数之后，您将收到一张有效的信用卡。

1270
01:09:41,800 --> 01:09:42,820
它为您提供了一张真实的信用卡。这是真实的东西。

1271
01:09:43,000 --> 01:09:44,540
这是真实的。它包括名称和所有其他细节。

1272
01:09:44,840 --> 01:09:45,400
它包含了姓名和所有其他必要信息。明白了。

1273
01:09:45,520 --> 01:09:46,860
好的，那就是方法。

1274
01:09:48,160 --> 01:09:48,760
所以，就是这样。

1275
01:09:49,520 --> 01:09:50,120
这需要完成。

1276
01:09:50,380 --> 01:09:50,920
让我们工作。然后我们可以休息一下。

1277
01:09:51,380 --> 01:09:53,520
然后，我们将继续处理一些其他事务。

1278
01:09:53,720 --> 01:09:54,880
我们将要拥有一些其他物品。我们已经有一些。

1279
01:09:56,100 --> 01:09:57,020
我们有一个名为的函数。

1280
01:09:58,040 --> 01:09:58,640
调用函数。检索。

1281
01:09:59,900 --> 01:10:00,500
理解。接收。

1282
01:10:01,460 --> 01:10:02,060
获取客户信息。

1283
01:10:02,500 --> 01:10:03,740
顾客。以及这个功能。

1284
01:10:03,940 --> 01:10:04,440
这个功能。看这里。

1285
01:10:04,460 --> 01:10:04,740
看这里。就在现在。

1286
01:10:05,280 --> 01:10:07,020
现在，它只有自己。

1287
01:10:08,060 --> 01:10:09,720
它只有自己。它缺少其他任何东西。

1288
01:10:10,220 --> 01:10:11,980
没有其他东西。你应该如何称呼这个函数？

1289
01:10:12,220 --> 01:10:13,640
你应该如何调用这个函数？当你现在调用这个函数时。

1290
01:10:16,580 --> 01:10:18,040
当你调用这个函数时，每个人都跟着我。

1291
01:10:19,200 --> 01:10:20,340
大家，请跟着我走。结束通话。

1292
01:10:21,700 --> 01:10:23,000
请提供您的信用卡信息。

1293
01:10:23,860 --> 01:10:24,460
然后你接待顾客。

1294
01:10:25,340 --> 01:10:26,060
当然，客户。明白了。

1295
01:10:26,080 --> 01:10:27,160
好的，那就是你称呼它的方式。

1296
01:10:28,100 --> 01:10:30,000
这就是你称呼它的方式。你不需要加上“自己”。

1297
01:10:31,300 --> 01:10:32,720
你不需要专注于自己。你现在在哪里？

1298
01:10:32,840 --> 01:10:33,840
自我现在在哪里？自我在这里。

1299
01:10:33,920 --> 01:10:34,100
我在这里。看。

1300
01:10:34,460 --> 01:10:35,480
看。CC 是自己。

1301
01:10:37,340 --> 01:10:39,400
CC 代表自己。因此，每个人都能理解这个逻辑。

1302
01:10:40,480 --> 01:10:42,320
所以每个人在调用这个函数时都能理解逻辑。

1303
01:10:42,440 --> 01:10:42,700
当您调用此函数时，请检索数据。

1304
01:10:42,800 --> 01:10:43,220
获取客户信息。

1305
01:10:44,180 --> 01:10:46,500
顾客实际上是在调用这个函数。

1306
01:10:46,780 --> 01:10:47,160
它实际上正在调用这个函数。

1307
01:10:47,800 --> 01:10:51,700
然而，自我现在与CC相连。

1308
01:10:52,040 --> 01:10:54,560
自我目前已连接到CC。您无需采取任何行动。

1309
01:10:54,660 --> 01:10:55,500
这里不需要输入任何内容。

1310
01:10:56,560 --> 01:10:57,500
简单地留空。然后继续。

1311
01:10:57,820 --> 01:10:59,240
然后它将被给予你。

1312
01:10:59,340 --> 01:11:00,220
这将由约翰·多给你。

1313
01:11:02,780 --> 01:11:03,420
约翰·多伊。好的。

1314
01:11:03,420 --> 01:11:05,140
好的，这就是我们这里拥有的。

1315
01:11:05,320 --> 01:11:05,920
这就是我们这里拥有的。看这里。

1316
01:11:07,320 --> 01:11:07,920
大家看这里。

1317
01:11:08,180 --> 01:11:08,800
大家听着。

1318
01:11:10,320 --> 01:11:10,920
明白了。当然。

1319
01:11:10,940 --> 01:11:11,560
好的。就是这样。

1320
01:11:12,160 --> 01:11:12,840
就是这样。它有效。

1321
01:11:13,120 --> 01:11:13,260
它运作良好。

1322
01:11:13,380 --> 01:11:13,880
现在。

1323
01:11:14,200 --> 01:11:14,800
就是这样。

1324
01:11:14,940 --> 01:11:15,540
这个。这是。

1325
01:11:15,880 --> 01:11:16,940
这是。这是一个。

1326
01:11:17,320 --> 01:11:17,920
这是一个物体。

1327
01:11:18,260 --> 01:11:19,460
物体。CC 是一个物体。

1328
01:11:21,200 --> 01:11:21,800
CC 是一个对象。是的。

1329
01:11:25,980 --> 01:11:26,580
是的，那是正确的。

1330
01:11:30,540 --> 01:11:30,900
好的。当然。

1331
01:11:30,900 --> 01:11:31,020
是的，我同意。

1332
01:11:32,020 --> 01:11:32,540
是的，当然。

1333
01:11:32,620 --> 01:11:33,700
好的，让我再重复一遍。

1334
01:11:35,540 --> 01:11:36,620
让我重申一遍。这是蓝图。

1335
01:11:38,220 --> 01:11:39,260
这是一份蓝图。

1336
01:11:39,640 --> 01:11:40,700
这是蓝图。来自蓝图。

1337
01:11:40,900 --> 01:11:42,840
从蓝图中得知，您想要制作一张真实的信用卡。

1338
01:11:43,120 --> 01:11:44,040
您想生成一张有效的信用卡吗？您该如何实现这一目标？

1339
01:11:45,240 --> 01:11:47,460
你是怎么做到的？只需写下相同的类名。

1340
01:11:47,680 --> 01:11:48,900
只需写下相同的类名，后面跟着括号。

1341
01:11:50,020 --> 01:11:50,540
接着是括号。然后。

1342
01:11:50,620 --> 01:11:54,240
接下来，请输入此类所需的所有参数。

1343
01:11:54,480 --> 01:11:55,480
您已输入了此课程的所有必要参数。在这种情况下。

1344
01:11:55,520 --> 01:11:57,520
在这种情况下，除了自己之外，一切都是无关紧要的。

1345
01:11:58,200 --> 01:11:58,720
除了自己，一切都微不足道。

1346
01:11:58,760 --> 01:11:59,120
那么，接下来呢？

1347
01:11:59,120 --> 01:12:00,860
现在。第一件事是。

1348
01:12:01,020 --> 01:12:01,800
第一件事是定制名称。

1349
01:12:02,300 --> 01:12:03,480
定制姓名。他的名字是约翰·多。

1350
01:12:03,940 --> 01:12:05,080
那个人是来自美国银行的约翰·多。

1351
01:12:05,400 --> 01:12:06,740
美国银行和账号。

1352
01:12:06,860 --> 01:12:08,340
需要账号。1000的限制。

1353
01:12:08,860 --> 01:12:09,460
1000的限制。然后。

1354
01:12:09,820 --> 01:12:10,820
然后。

1355
01:12:10,960 --> 01:12:13,160
在那之后，一张新的信用卡已经发行。

1356
01:12:14,060 --> 01:12:14,400
一张新信用卡已经发行。

1357
01:12:14,820 --> 01:12:15,720
所以，让我们称它为CC。

1358
01:12:17,040 --> 01:12:18,380
让我们把它称为CC。一旦你有了那个。

1359
01:12:18,580 --> 01:12:19,100
一旦你有了，请告诉我。

1360
01:12:19,620 --> 01:12:20,300
当然。接下来是什么？

1361
01:12:20,460 --> 01:12:21,060
从那时到现在。

1362
01:12:21,260 --> 01:12:23,680
现在一切都已定义。

1363
01:12:24,280 --> 01:12:24,960
一切皆如其所见定义。

1364
01:12:25,100 --> 01:12:26,700
看，这里有一个缩进。

1365
01:12:27,060 --> 01:12:28,060
这里有一个缩进。类缩进。

1366
01:12:28,060 --> 01:12:31,900
类缩进。所有内容都在类内定义。

1367
01:12:32,180 --> 01:12:33,940
现在，类内定义的所有内容都被视为属性。

1368
01:12:34,320 --> 01:12:35,280
现在是时机。这类似于时间的概念。

1369
01:12:35,560 --> 01:12:35,760
这就像一个属性。然而。

1370
01:12:35,900 --> 01:12:37,980
然而，这个属性实际上是一个函数。

1371
01:12:38,320 --> 01:12:39,840
这个属性实际上是一个函数。我们称之为方法。

1372
01:12:40,620 --> 01:12:42,720
我们称之为这种方法。而称呼那种方法的方式是。

1373
01:12:43,060 --> 01:12:43,780
而要提及那个的方法是通过使用它。

1374
01:12:44,240 --> 01:12:44,900
使用CC。

1375
01:12:45,620 --> 01:12:46,340
抄送。抄送。

1376
01:12:46,720 --> 01:12:48,440
一旦你打这个电话。

1377
01:12:48,700 --> 01:12:51,460
一旦您发起此调用，CC将连接到自身。

1378
01:12:51,720 --> 01:12:52,140
这张信用卡将自动插入机器。

1379
01:12:52,180 --> 01:12:52,780
所以，当你打这个电话时。

1380
01:12:52,860 --> 01:12:53,720
当你打这个电话时，请获取客户信息。

1381
01:12:54,320 --> 01:12:55,480
获取客户信息。这是客户关怀中心。

1382
01:12:55,700 --> 01:12:56,880
这是一个CC。它会跳。

1383
01:12:57,400 --> 01:12:57,880
我会在这里跳。

1384
01:12:59,740 --> 01:13:01,740
过来。一旦你到了，告诉我。

1385
01:13:02,200 --> 01:13:02,680
一旦你到达这里，请继续。

1386
01:13:02,940 --> 01:13:03,420
在那种情况下。因为的原因。

1387
01:13:03,800 --> 01:13:04,280
因为。以前。

1388
01:13:04,600 --> 01:13:06,500
您之前将John Doe加入了抄送列表。

1389
01:13:07,460 --> 01:13:07,940
您已将John Doe添加到抄送列表。

1390
01:13:07,940 --> 01:13:08,820
现在你可以获得它。

1391
01:13:08,840 --> 01:13:09,620
你可以取回它。约翰·多离开。

1392
01:13:11,180 --> 01:13:11,660
约翰·多已离开。请大家离开。

1393
01:13:11,900 --> 01:13:12,680
每个人，抓住这个概念。

1394
01:13:13,980 --> 01:13:14,460
理解概念。继续。

1395
01:13:14,500 --> 01:13:15,320
所以，这就是它的运作方式。

1396
01:13:15,920 --> 01:13:16,300
这就是它的运作方式。现在。

1397
01:13:16,440 --> 01:13:17,100
现在。然后。

1398
01:13:17,160 --> 01:13:18,260
然后，你可以获得另一样东西。

1399
01:13:18,360 --> 01:13:18,800
你可以获得另一样东西。去银行。

1400
01:13:19,000 --> 01:13:19,440
获取银行账户。

1401
01:13:20,340 --> 01:13:20,820
获取账户信息。

1402
01:13:21,420 --> 01:13:21,900
现在。

1403
01:13:22,000 --> 01:13:22,760
现在。再多一点点。

1404
01:13:23,240 --> 01:13:24,280
收费有点复杂。

1405
01:13:24,820 --> 01:13:25,300
充电是复杂的。的确。

1406
01:13:25,300 --> 01:13:25,380
那么，接下来呢？

1407
01:13:25,380 --> 01:13:26,280
现在你有一张信用卡。

1408
01:13:26,440 --> 01:13:27,200
你有一张信用卡。你通过刷卡进行支付。

1409
01:13:27,800 --> 01:13:28,160
请现在刷卡。

1410
01:13:28,220 --> 01:13:29,000
现在，你负责这个。

1411
01:13:29,220 --> 01:13:29,400
你将为此付费。然而。

1412
01:13:29,480 --> 01:13:30,740
然而，你不想简单地匆忙。

1413
01:13:31,860 --> 01:13:32,220
你不想随意收费。

1414
01:13:32,380 --> 01:13:32,700
随机地。最初。

1415
01:13:32,800 --> 01:13:33,560
首先，你想要确保。

1416
01:13:33,620 --> 01:13:34,400
你想要确保你不要做得过头。

1417
01:13:35,080 --> 01:13:35,760
您尚未超出限制。

1418
01:13:36,520 --> 01:13:36,880
了解自己的限制。

1419
01:13:36,960 --> 01:13:37,680
所以，如果你想要的话。

1420
01:13:38,340 --> 01:13:39,820
如果你想买一台笔记本电脑。

1421
01:13:39,900 --> 01:13:41,080
如果您想购买一台价格限制为1000美元的笔记本电脑。

1422
01:13:41,300 --> 01:13:41,660
可能限制在1000个。

1423
01:13:41,700 --> 01:13:42,820
你可能无法做到。

1424
01:13:43,360 --> 01:13:43,940
你将无法完成它。然后。

1425
01:13:44,200 --> 01:13:44,560
然后，接下来发生了什么？

1426
01:13:45,140 --> 01:13:45,860
好的。让我们从第一个开始。

1427
01:13:45,900 --> 01:13:46,100
第一件事。

1428
01:13:46,600 --> 01:13:47,580
一个物体。最初的物体。

1429
01:13:47,660 --> 01:13:48,680
你想要做的第一件事是。

1430
01:13:48,800 --> 01:13:49,700
你想要做的是比较。

1431
01:13:52,000 --> 01:13:52,360
你想要进行比较。

1432
01:13:52,440 --> 01:13:53,240
那时候你需要充电。

1433
01:13:53,240 --> 01:13:53,920
当你购买时，请考虑价格。

1434
01:13:54,960 --> 01:13:55,980
考虑到您已经拥有的价格。

1435
01:13:56,060 --> 01:13:56,520
你已经有一些余额。

1436
01:13:56,960 --> 01:13:58,080
从一开始就找到平衡。

1437
01:13:58,140 --> 01:13:58,500
在最开始，什么都没有。

1438
01:13:58,920 --> 01:13:59,600
这是零。然后。

1439
01:13:59,640 --> 01:14:00,180
然后，轮到你了。

1440
01:14:00,280 --> 01:14:00,660
请您先。不，您先。

1441
01:14:01,040 --> 01:14:01,520
你。你。

1442
01:14:01,620 --> 01:14:02,060
你，负责。

1443
01:14:02,320 --> 01:14:03,240
多次充电。

1444
01:14:03,460 --> 01:14:03,560
许多次。

1445
01:14:03,760 --> 01:14:04,240
它已经积累。

1446
01:14:04,900 --> 01:14:05,740
应计余额。

1447
01:14:06,020 --> 01:14:06,720
寻找平衡。超越平衡。

1448
01:14:06,740 --> 01:14:07,220
然后，总计。

1449
01:14:07,680 --> 01:14:08,160
总计。

1450
01:14:08,280 --> 01:14:08,880
总金额。更新余额。

1451
01:14:09,060 --> 01:14:09,540
新的开始即将到来。

1452
01:14:09,580 --> 01:14:10,060
价格会是多少？

1453
01:14:10,120 --> 01:14:10,460
价格正在上涨。

1454
01:14:10,480 --> 01:14:11,560
添加。当前余额。

1455
01:14:11,920 --> 01:14:12,820
检查当前余额以确保准确性。

1456
01:14:13,220 --> 01:14:13,700
请确保。如果。

1457
01:14:13,800 --> 01:14:14,520
如果。这是。

1458
01:14:14,700 --> 01:14:15,640
这超出了限制。

1459
01:14:16,240 --> 01:14:16,720
您已超出限制。

1460
01:14:16,840 --> 01:14:17,840
你不会去。

1461
01:14:18,060 --> 01:14:18,540
你不会成功。

1462
01:14:18,720 --> 01:14:19,340
成功充电。

1463
01:14:19,340 --> 01:14:19,700
充电中。

1464
01:14:20,780 --> 01:14:21,240
请澄清。如果不行，请提供更多信息。

1465
01:14:21,340 --> 01:14:22,000
否则，就是。

1466
01:14:22,040 --> 01:14:22,500
就是这样。你成功了。

1467
01:14:22,660 --> 01:14:23,800
你会成功的。

1468
01:14:24,140 --> 01:14:25,080
您将要添加价格。

1469
01:14:25,220 --> 01:14:25,920
将价格包含在您的余额中。

1470
01:14:26,280 --> 01:14:26,740
找到你的平衡。现在。

1471
01:14:26,840 --> 01:14:27,380
而你已经回来了。

1472
01:14:27,660 --> 01:14:28,440
你已经返回。布尔值。

1473
01:14:28,660 --> 01:14:29,420
布尔值。在这种情况下。

1474
01:14:29,480 --> 01:14:29,800
在这种情况下，这是真的。

1475
01:14:30,000 --> 01:14:30,420
那是真的。好的。

1476
01:14:30,900 --> 01:14:31,360
好的。任务完成。

1477
01:14:32,280 --> 01:14:32,740
成就。和。

1478
01:14:32,800 --> 01:14:33,160
然后。

1479
01:14:33,420 --> 01:14:33,880
那么，让我们来看看。

1480
01:14:34,000 --> 01:14:34,740
看。如果你想要创造。

1481
01:14:34,760 --> 01:14:35,220
如果您想要进行付款。

1482
01:14:36,120 --> 01:14:36,580
已经付款。

1483
01:14:36,880 --> 01:14:37,400
这是你如何使用它。

1484
01:14:37,480 --> 01:14:37,900
不客气。

1485
01:14:38,260 --> 01:14:38,720
积极的一面。因为一个原因。

1486
01:14:38,780 --> 01:14:39,440
因为。每一次。

1487
01:14:39,500 --> 01:14:40,040
每次你添加。

1488
01:14:40,200 --> 01:14:41,120
请添加。检查余额。

1489
01:14:41,240 --> 01:14:41,740
查看余额。您可以进行付款。

1490
01:14:41,800 --> 01:14:42,000
你将被收费。

1491
01:14:42,260 --> 01:14:42,720
就是这样。然而。

1492
01:14:42,720 --> 01:14:43,360
然而，如果你希望。

1493
01:14:43,480 --> 01:14:43,980
如果您希望进行付款。

1494
01:14:44,000 --> 01:14:44,240
付清。你的。

1495
01:14:44,560 --> 01:14:45,440
您的信用卡。

1496
01:14:45,800 --> 01:14:46,620
使用信用卡进行扣款。

1497
01:14:46,860 --> 01:14:47,520
你减去。找到差异。

1498
01:14:47,680 --> 01:14:47,900
寻找平衡。正确。

1499
01:14:48,080 --> 01:14:48,600
好的。请继续。

1500
01:14:48,620 --> 01:14:49,240
所以，如果你付款。

1501
01:14:49,540 --> 01:14:50,320
如果您付款，您将收到物品。

1502
01:14:50,460 --> 01:14:50,940
如果您支付任意金额。

1503
01:14:51,220 --> 01:14:51,940
减去一定数量。

1504
01:14:52,200 --> 01:14:52,740
请减去指定的金额。

1505
01:14:52,900 --> 01:14:53,100
数量是足够的。

1506
01:14:53,160 --> 01:14:53,460
那么，你什么时候？

1507
01:14:53,500 --> 01:14:54,120
当你拥有这个。

1508
01:14:54,320 --> 01:14:54,860
请拿着这个。那就是它的意思。

1509
01:14:55,280 --> 01:14:55,860
那意味着。那意味着。

1510
01:14:56,060 --> 01:14:56,520
这意味着你明白了。

1511
01:14:57,620 --> 01:14:58,520
你有这个物品。

1512
01:14:59,820 --> 01:15:00,600
这件事。让我来。

1513
01:15:00,640 --> 01:15:01,200
让我写下来。

1514
01:15:01,440 --> 01:15:01,960
请记下一些东西。

1515
01:15:04,100 --> 01:15:04,880
会有一些事情。

1516
01:15:04,960 --> 01:15:05,320
它会发生的。只要等待。

1517
01:15:06,680 --> 01:15:07,200
就这个数量。

1518
01:15:07,460 --> 01:15:07,980
总额。明白。

1519
01:15:08,020 --> 01:15:08,340
好的，就是这样。

1520
01:15:08,400 --> 01:15:08,860
就是这样。确切地说。

1521
01:15:08,860 --> 01:15:09,240
确切。相同。

1522
01:15:09,460 --> 01:15:09,680
和这个一样。

1523
01:15:10,140 --> 01:15:10,780
就像这样。你有它。

1524
01:15:11,840 --> 01:15:12,200
你有。减。

1525
01:15:12,540 --> 01:15:12,900
减去。相同。

1526
01:15:12,920 --> 01:15:13,460
相等。就是这样。

1527
01:15:13,520 --> 01:15:13,820
就是这样。这个。

1528
01:15:14,440 --> 01:15:15,160
这正在发生。

1529
01:15:15,940 --> 01:15:16,300
它正在进行中。减法。

1530
01:15:16,300 --> 01:15:16,720
从自身中减去。

1531
01:15:17,140 --> 01:15:17,500
独自。好的。

1532
01:15:17,640 --> 01:15:18,260
好的，就是这样。

1533
01:15:18,340 --> 01:15:18,620
就是这样。

1534
01:15:18,840 --> 01:15:19,540
第一个。

1535
01:15:19,620 --> 01:15:19,800
第一件事。

1536
01:15:19,940 --> 01:15:20,240
有一件事情我们需要处理。

1537
01:15:20,320 --> 01:15:20,600
我们在做。

1538
01:15:20,660 --> 01:15:21,020
立即行动。

1539
01:15:21,040 --> 01:15:21,260
请稍等。

1540
01:15:21,660 --> 01:15:22,020
这个班级。

1541
01:15:22,280 --> 01:15:22,500
下课了。

1542
01:15:22,540 --> 01:15:22,880
和。对象。

1543
01:15:23,420 --> 01:15:23,780
物体。和。

1544
01:15:23,820 --> 01:15:24,160
继续。进行。

1545
01:15:24,240 --> 01:15:24,400
确保。

1546
01:15:24,420 --> 01:15:24,600
当然。你。

1547
01:15:24,640 --> 01:15:24,860
你想要吗？

1548
01:15:24,940 --> 01:15:25,040
渴望。要。

1549
01:15:25,400 --> 01:15:25,760
待续。

1550
01:15:25,900 --> 01:15:25,980
之后。

1551
01:15:39,440 --> 01:15:39,760
技能

1552
01:15:39,780 --> 01:15:40,020
技能和能力。

1553
01:15:40,480 --> 01:15:40,800
和。

1554
01:15:41,680 --> 01:15:42,000
概念

1555
01:15:42,640 --> 01:15:42,960
我明白这个概念。好的。

1556
01:15:42,980 --> 01:15:43,560
好的，我们会停止。

1557
01:15:43,640 --> 01:15:43,880
我们会在这里停下来。

1558
01:15:43,960 --> 01:15:44,120
在这里。今天。

1559
01:15:46,520 --> 01:15:46,840
今天。谢谢。

1560
01:15:46,940 --> 01:15:47,020
谢谢你。

